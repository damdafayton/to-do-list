(()=>{var e={147:(e,t,n)=>{"use strict";n.d(t,{Z:()=>m});var r=n(537),o=n.n(r),i=n(645),c=n.n(i),a=n(667),s=n.n(a),l=new URL(n(322),n.b),d=new URL(n(333),n.b),A=c()(o()),u=s()(l),p=s()(d);A.push([e.id,"div{color:blue}input[type=checkbox]{border-radius:2px !important;cursor:pointer;width:1.3em;height:1.2em}input[type=checkbox]:checked{background-color:unset !important;border:none !important;background-image:url("+u+") !important}input[type=checkbox]:focus{box-shadow:none;border-color:unset}.checked{color:#afafaf !important}.checked p{text-decoration:line-through !important}svg{width:20px;height:20px;fill:#cbcbcb}ul{border-radius:0 !important}ul>li{border:none !important;border-bottom:1px solid rgba(0,0,0,.125) !important}#list-container{box-shadow:0 2px 8px rgba(0,0,0,.15)}#list-container>div input{color:#949494;width:100%;padding:1rem 1rem;border:none;border-bottom:1px solid rgba(0,0,0,.125)}#list-container>div input::placeholder{font-style:italic}#list-container>div input:focus-visible{outline:none}#list-container>div span{-webkit-appearance:none;-moz-appearance:none;appearance:none;border:none;background-color:transparent;position:absolute;right:0;top:0;z-index:0;width:40px;height:100%;background-image:url("+p+");background-repeat:no-repeat;background-position:center;cursor:pointer}#remove-selected{background-color:#f6f6f6;color:#949494;cursor:pointer}#remove-selected:hover{background-color:#eee}.text-edit{border:none;padding:1rem 1rem;margin:0;text-decoration:none;background-color:unset}.text-edit:focus-visible{outline:none}.editing{background-color:#fdfdb7 !important}","",{version:3,sources:["webpack://./src/style.scss"],names:[],mappings:"AAAA,IACE,UAAA,CAGF,qBACE,4BAAA,CACA,cAAA,CACA,WAAA,CACA,YAAA,CAEA,6BACE,iCAAA,CACA,sBAAA,CACA,mEAAA,CAGF,2BACE,eAAA,CACA,kBAAA,CAIJ,SAEE,wBAAA,CAEA,WACE,uCAAA,CAIJ,IACE,UAAA,CACA,WAAA,CACA,YAAA,CAGF,GACE,0BAAA,CAEA,MACE,sBAAA,CACA,mDAAA,CAIJ,gBACE,oCAAA,CAGE,0BACE,aAAA,CACA,UAAA,CACA,iBAAA,CACA,WAAA,CACA,wCAAA,CAEA,uCACE,iBAAA,CAGF,wCACE,YAAA,CAIJ,yBACE,uBAAA,CACA,oBAAA,CACA,eAAA,CACA,WAAA,CACA,4BAAA,CACA,iBAAA,CACA,OAAA,CACA,KAAA,CACA,SAAA,CACA,UAAA,CACA,WAAA,CACA,wDAAA,CACA,2BAAA,CACA,0BAAA,CACA,cAAA,CAKN,iBACE,wBAAA,CACA,aAAA,CACA,cAAA,CAEA,uBACE,qBAAA,CAIJ,WACE,WAAA,CACA,iBAAA,CACA,QAAA,CACA,oBAAA,CACA,sBAAA,CAEA,yBACE,YAAA,CAIJ,SACE,mCAAA",sourcesContent:['div {\r\n  color: blue;\r\n}\r\n\r\ninput[type="checkbox"] {\r\n  border-radius: 2px !important;\r\n  cursor: pointer;\r\n  width: 1.3em;\r\n  height: 1.2em;\r\n\r\n  &:checked {\r\n    background-color: unset !important;\r\n    border: none !important;\r\n    background-image: url("./icons/checked.svg") !important;\r\n  }\r\n\r\n  &:focus {\r\n    box-shadow: none;\r\n    border-color: unset;\r\n  }\r\n}\r\n\r\n.checked {\r\n  // background-color: #0c88e4 !important;\r\n  color: rgb(175 175 175) !important;\r\n\r\n  p {\r\n    text-decoration: line-through !important;\r\n  }\r\n}\r\n\r\nsvg {\r\n  width: 20px;\r\n  height: 20px;\r\n  fill: #cbcbcb;\r\n}\r\n\r\nul {\r\n  border-radius: 0 !important;\r\n\r\n  > li {\r\n    border: none !important;\r\n    border-bottom: 1px solid rgba(0, 0, 0, 0.125) !important;\r\n  }\r\n}\r\n\r\n#list-container {\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\r\n\r\n  > div {\r\n    input {\r\n      color: #949494;\r\n      width: 100%;\r\n      padding: 1rem 1rem;\r\n      border: none;\r\n      border-bottom: 1px solid rgba(0, 0, 0, 0.125);\r\n\r\n      &::placeholder {\r\n        font-style: italic;\r\n      }\r\n\r\n      &:focus-visible {\r\n        outline: none;\r\n      }\r\n    }\r\n\r\n    span {\r\n      -webkit-appearance: none;\r\n      -moz-appearance: none;\r\n      appearance: none;\r\n      border: none;\r\n      background-color: transparent;\r\n      position: absolute;\r\n      right: 0;\r\n      top: 0;\r\n      z-index: 0;\r\n      width: 40px;\r\n      height: 100%;\r\n      background-image: url("./icons/enter.png");\r\n      background-repeat: no-repeat;\r\n      background-position: center;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n}\r\n\r\n#remove-selected {\r\n  background-color: #f6f6f6;\r\n  color: #949494;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #eee;\r\n  }\r\n}\r\n\r\n.text-edit {\r\n  border: none;\r\n  padding: 1rem 1rem;\r\n  margin: 0;\r\n  text-decoration: none;\r\n  background-color: unset;\r\n\r\n  &:focus-visible {\r\n    outline: none;\r\n  }\r\n}\r\n\r\n.editing {\r\n  background-color: #fdfdb7 !important;\r\n}\r\n'],sourceRoot:""}]);const m=A},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(r)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(c[s]=!0)}for(var l=0;l<e.length;l++){var d=[].concat(e[l]);r&&c[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),t.push(d))}},t}},667:e=>{"use strict";e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),c=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(c).concat([i]).join("\n")}return[t].join("\n")}},379:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var i={},c=[],a=0;a<e.length;a++){var s=e[a],l=r.base?s[0]+r.base:s[0],d=i[l]||0,A="".concat(l," ").concat(d);i[l]=d+1;var u=n(A),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)t[u].references++,t[u].updater(p);else{var m=o(p,r);r.byIndex=a,t.splice(a,0,{identifier:A,updater:m,references:1})}c.push(A)}return c}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var c=0;c<i.length;c++){var a=n(i[c]);t[a].references--}for(var s=r(e,o),l=0;l<i.length;l++){var d=n(i[l]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}i=s}}},569:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{"use strict";e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},506:e=>{e.exports='<svg xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg" class="move icon-more-vert"><defs><symbol id="icon-more-vert" viewBox="0 0 512 512"><path d="m256 128c35 0 64-29 64-64 0-35-29-64-64-64-35 0-64 29-64 64 0 35 29 64 64 64z m0 64c-35 0-64 29-64 64 0 35 29 64 64 64 35 0 64-29 64-64 0-35-29-64-64-64z m0 192c-35 0-64 29-64 64 0 35 29 64 64 64 35 0 64-29 64-64 0-35-29-64-64-64z"></path></symbol></defs><use xlink:href="#icon-more-vert"></use></svg>'},322:(e,t,n)=>{"use strict";e.exports=n.p+"60bec4863a610ee62d4b.svg"},333:(e,t,n)=>{"use strict";e.exports=n.p+"fa544f635765db738d2e.png"}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={id:r,exports:{}};return e[r](i,i.exports,n),i.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,(()=>{"use strict";var e=n(379),t=n.n(e),r=n(795),o=n.n(r),i=n(569),c=n.n(i),a=n(565),s=n.n(a),l=n(216),d=n.n(l),A=n(589),u=n.n(A),p=n(147),m={};m.styleTagTransform=u(),m.setAttributes=s(),m.insert=c().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=d(),t()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;var g=n(506),f=n.n(g);let b={};function C(){document.querySelectorAll("#list-container p").forEach((e=>{e.hasAttribute("listenerOnClick")||e.addEventListener("click",(e=>{console.log(e.target),e.target.classList.add("d-none"),e.target.nextElementSibling.classList.remove("d-none"),b.target=e.target,b.sibling=e.target.nextElementSibling,e.target.parentElement.classList.add("editing")}))}))}function h(e){const t=e.target.value,n=document.querySelectorAll("#list-container li");let r=0;n.forEach(((t,n)=>{t===e.target.parentElement&&(r=n)}));const o=JSON.parse(localStorage.getItem("tasks"))||[];Object.keys(o).forEach(((e,n)=>{n===r&&(o[e].description=t)})),localStorage.setItem("tasks",JSON.stringify(o)),e.target.previousElementSibling.innerText=t}function v(e){"Enter"===e.code&&(e.target.blur(),e.target.parentElement.classList.remove("editing"))}function x(e){e.parentElement.classList.toggle("checked")}function E(e,t){const n=document.querySelectorAll("#list-container li > input[type=checkbox]");let r=0;n.forEach(((e,n)=>{e===t&&(r=n)}));const o=JSON.parse(localStorage.getItem("tasks"))||[];o.forEach((t=>{t.index===r&&(t.completed=e)})),localStorage.setItem("tasks",JSON.stringify(o))}function k(e){const t=document.createElement("li");t.classList.add("list-group-item","d-flex","align-items-center","py-0","pe-2");const n=document.createElement("p");n.innerText=e.description,n.classList.add("px-3","py-3","mb-0","w-100");const r=document.createElement("input");r.type="textarea",r.classList.add("text-edit","d-none","w-100"),r.value=e.description,r.addEventListener("change",h),r.addEventListener("keydown",v);const o=document.createElement("input");o.type="checkbox",o.checked=e.completed,o.classList.add("form-check-input");const i=document.createElement("div");i.innerHTML=f(),i.classList.add("ms-auto"),t.appendChild(o),t.appendChild(n),t.appendChild(r),t.appendChild(i),document.querySelector("#list-container ul").appendChild(t),o.addEventListener("change",(e=>function(e){x(e),e.checked?E(!0,e):E(!1,e)}(e.target))),o.checked&&x(o)}document.addEventListener("click",(e=>{e.target!==b.target&&e.target!==b.sibling&&Object.keys(b).length&&(b.sibling.parentElement.classList.remove("editing"),b.target.classList.remove("d-none"),b.sibling.classList.add("d-none"),b={})}),!0),(JSON.parse(localStorage.getItem("tasks"))||[]).forEach((e=>k(e))),C(),window.addEventListener("DOMContentLoaded",(function(){function e(e){const t=JSON.parse(localStorage.getItem("tasks"))||[],n={description:e.value,completed:!1,index:t.length};t.push(n),localStorage.setItem("tasks",JSON.stringify(t)),k(n),e.value="",C()}const t=document.querySelector("#create-task-text");t.addEventListener("keydown",(n=>{"Enter"===n.code&&e(t)})),document.querySelector("#list-container > div > span").addEventListener("click",(t=>{e(t.target.previousElementSibling)}))})),document.querySelector("#remove-selected").addEventListener("click",(function(){let e=JSON.parse(localStorage.getItem("tasks"))||[];e=e.filter((e=>!1===e.completed)),e.forEach(((e,t)=>{e.index=t})),localStorage.setItem("tasks",JSON.stringify(e)),document.querySelectorAll("#list-container li > input[type=checkbox]").forEach((e=>{e.checked&&e.parentElement.remove()}))})),window.addEventListener("load",(()=>{const e=document.querySelector("#list-container");console.log("dom loaded"),e.classList.remove("d-none")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,