(()=>{var e={400:()=>{document.querySelector("#clear-div").addEventListener("click",(()=>{let e=JSON.parse(localStorage.getItem("tasks"))||[];e=e.filter((e=>!1===e.completed)),e.forEach(((e,t)=>{e.index=t})),localStorage.setItem("tasks",JSON.stringify(e)),document.querySelectorAll("#list-container li > input[type=checkbox]").forEach((e=>{e.checked&&e.parentElement.remove()}))}))},147:(e,t,n)=>{"use strict";n.d(t,{Z:()=>g});var r=n(537),o=n.n(r),c=n(645),a=n.n(c),i=n(667),s=n.n(i),l=new URL(n(322),n.b),d=new URL(n(333),n.b),A=a()(o()),u=s()(l),p=s()(d);A.push([e.id,"div{color:blue}input[type=checkbox]{border-radius:2px !important;cursor:pointer;width:1.3em;height:1.2em}input[type=checkbox]:checked{background-color:unset !important;border:none !important;background-image:url("+u+") !important}input[type=checkbox]:focus{box-shadow:none;border-color:unset}.checked{color:#afafaf !important}.checked p{text-decoration:line-through !important}svg{width:20px;height:20px;fill:#cbcbcb}ul{border-radius:0 !important}ul>li{border:none !important;border-bottom:1px solid rgba(0,0,0,.125) !important}#list-container{box-shadow:0 2px 8px rgba(0,0,0,.15)}#list-container>div input{color:#949494;width:100%;padding:1rem 1rem;border:none;border-bottom:1px solid rgba(0,0,0,.125)}#list-container>div input::placeholder{font-style:italic}#list-container>div input:focus-visible{outline:none}#list-container>div span{-webkit-appearance:none;-moz-appearance:none;appearance:none;border:none;background-color:transparent;position:absolute;right:0;top:0;z-index:0;width:40px;height:100%;background-image:url("+p+");background-repeat:no-repeat;background-position:center;cursor:pointer}#clear-div{background-color:#f6f6f6;color:#949494;cursor:pointer}#clear-div:hover{background-color:#eee}.text-edit{border:none;padding:1rem 1rem;margin:0;text-decoration:none;background-color:unset}.text-edit:focus-visible{outline:none}.editing{background-color:#fdfdb7 !important}","",{version:3,sources:["webpack://./src/style.scss"],names:[],mappings:"AAAA,IACE,UAAA,CAGF,qBACE,4BAAA,CACA,cAAA,CACA,WAAA,CACA,YAAA,CAEA,6BACE,iCAAA,CACA,sBAAA,CACA,mEAAA,CAGF,2BACE,eAAA,CACA,kBAAA,CAIJ,SAEE,wBAAA,CAEA,WACE,uCAAA,CAIJ,IACE,UAAA,CACA,WAAA,CACA,YAAA,CAGF,GACE,0BAAA,CAEA,MACE,sBAAA,CACA,mDAAA,CAIJ,gBACE,oCAAA,CAGE,0BACE,aAAA,CACA,UAAA,CACA,iBAAA,CACA,WAAA,CACA,wCAAA,CAEA,uCACE,iBAAA,CAGF,wCACE,YAAA,CAIJ,yBACE,uBAAA,CACA,oBAAA,CACA,eAAA,CACA,WAAA,CACA,4BAAA,CACA,iBAAA,CACA,OAAA,CACA,KAAA,CACA,SAAA,CACA,UAAA,CACA,WAAA,CACA,wDAAA,CACA,2BAAA,CACA,0BAAA,CACA,cAAA,CAKN,WACE,wBAAA,CACA,aAAA,CACA,cAAA,CAEA,iBACE,qBAAA,CAIJ,WACE,WAAA,CACA,iBAAA,CACA,QAAA,CACA,oBAAA,CACA,sBAAA,CAEA,yBACE,YAAA,CAIJ,SACE,mCAAA",sourcesContent:['div {\r\n  color: blue;\r\n}\r\n\r\ninput[type="checkbox"] {\r\n  border-radius: 2px !important;\r\n  cursor: pointer;\r\n  width: 1.3em;\r\n  height: 1.2em;\r\n\r\n  &:checked {\r\n    background-color: unset !important;\r\n    border: none !important;\r\n    background-image: url("./icons/checked.svg") !important;\r\n  }\r\n\r\n  &:focus {\r\n    box-shadow: none;\r\n    border-color: unset;\r\n  }\r\n}\r\n\r\n.checked {\r\n  // background-color: #0c88e4 !important;\r\n  color: rgb(175 175 175) !important;\r\n\r\n  p {\r\n    text-decoration: line-through !important;\r\n  }\r\n}\r\n\r\nsvg {\r\n  width: 20px;\r\n  height: 20px;\r\n  fill: #cbcbcb;\r\n}\r\n\r\nul {\r\n  border-radius: 0 !important;\r\n\r\n  > li {\r\n    border: none !important;\r\n    border-bottom: 1px solid rgba(0, 0, 0, 0.125) !important;\r\n  }\r\n}\r\n\r\n#list-container {\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\r\n\r\n  > div {\r\n    input {\r\n      color: #949494;\r\n      width: 100%;\r\n      padding: 1rem 1rem;\r\n      border: none;\r\n      border-bottom: 1px solid rgba(0, 0, 0, 0.125);\r\n\r\n      &::placeholder {\r\n        font-style: italic;\r\n      }\r\n\r\n      &:focus-visible {\r\n        outline: none;\r\n      }\r\n    }\r\n\r\n    span {\r\n      -webkit-appearance: none;\r\n      -moz-appearance: none;\r\n      appearance: none;\r\n      border: none;\r\n      background-color: transparent;\r\n      position: absolute;\r\n      right: 0;\r\n      top: 0;\r\n      z-index: 0;\r\n      width: 40px;\r\n      height: 100%;\r\n      background-image: url("./icons/enter.png");\r\n      background-repeat: no-repeat;\r\n      background-position: center;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n}\r\n\r\n#clear-div {\r\n  background-color: #f6f6f6;\r\n  color: #949494;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #eee;\r\n  }\r\n}\r\n\r\n.text-edit {\r\n  border: none;\r\n  padding: 1rem 1rem;\r\n  margin: 0;\r\n  text-decoration: none;\r\n  background-color: unset;\r\n\r\n  &:focus-visible {\r\n    outline: none;\r\n  }\r\n}\r\n\r\n.editing {\r\n  background-color: #fdfdb7 !important;\r\n}\r\n'],sourceRoot:""}]);const g=A},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,c){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(a[s]=!0)}for(var l=0;l<e.length;l++){var d=[].concat(e[l]);r&&a[d[0]]||(void 0!==c&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=c),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),t.push(d))}},t}},667:e=>{"use strict";e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),c="/*# ".concat(o," */"),a=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(a).concat([c]).join("\n")}return[t].join("\n")}},379:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var c={},a=[],i=0;i<e.length;i++){var s=e[i],l=r.base?s[0]+r.base:s[0],d=c[l]||0,A="".concat(l," ").concat(d);c[l]=d+1;var u=n(A),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)t[u].references++,t[u].updater(p);else{var g=o(p,r);r.byIndex=i,t.splice(i,0,{identifier:A,updater:g,references:1})}a.push(A)}return a}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var c=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<c.length;a++){var i=n(c[a]);t[i].references--}for(var s=r(e,o),l=0;l<c.length;l++){var d=n(c[l]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}c=s}}},569:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{"use strict";e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var c=n.sourceMap;c&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(c))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},506:e=>{e.exports='<svg xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg" class="move icon-more-vert"><defs><symbol id="icon-more-vert" viewBox="0 0 512 512"><path d="m256 128c35 0 64-29 64-64 0-35-29-64-64-64-35 0-64 29-64 64 0 35 29 64 64 64z m0 64c-35 0-64 29-64 64 0 35 29 64 64 64 35 0 64-29 64-64 0-35-29-64-64-64z m0 192c-35 0-64 29-64 64 0 35 29 64 64 64 35 0 64-29 64-64 0-35-29-64-64-64z"></path></symbol></defs><use xlink:href="#icon-more-vert"></use></svg>'},322:(e,t,n)=>{"use strict";e.exports=n.p+"e50a3e44e1c699201d01.svg"},333:(e,t,n)=>{"use strict";e.exports=n.p+"fa544f635765db738d2e.png"}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var c=t[r]={id:r,exports:{}};return e[r](c,c.exports,n),c.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,(()=>{"use strict";var e=n(379),t=n.n(e),r=n(795),o=n.n(r),c=n(569),a=n.n(c),i=n(565),s=n.n(i),l=n(216),d=n.n(l),A=n(589),u=n.n(A),p=n(147),g={};g.styleTagTransform=u(),g.setAttributes=s(),g.insert=a().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=d(),t()(p.Z,g),p.Z&&p.Z.locals&&p.Z.locals;var m=n(506),f=n.n(m);function b(e){const t=e.target.value;console.log(t);const n=document.querySelectorAll("#list-container li");let r=0;n.forEach(((t,n)=>{t===e.target.parentElement&&(r=n)}));const o=JSON.parse(localStorage.getItem("tasks"))||[];Object.keys(o).forEach(((e,n)=>{n===r&&(o[e].description=t)})),localStorage.setItem("tasks",JSON.stringify(o)),e.target.previousElementSibling.innerText=t}let h={};function C(){const e=document.querySelectorAll("#list-container p");console.log(e),e.forEach((e=>{e.hasAttribute("listenerOnClick")||e.addEventListener("click",(e=>{console.log(e.target),e.target.classList.add("d-none"),e.target.nextElementSibling.classList.remove("d-none"),h.target=e.target,h.sibling=e.target.nextElementSibling,e.target.parentElement.classList.add("editing")}))}))}document.addEventListener("click",(e=>{console.log(e.target===h.sibling),console.log(e.target===h.target),e.target!==h.target&&e.target!==h.sibling&&Object.keys(h).length&&(h.sibling.parentElement.classList.remove("editing"),h.target.classList.remove("d-none"),h.sibling.classList.add("d-none"),h={})}),!0);const v=document.querySelector("#list-container").querySelector("ul");function x(e){e.parentElement.classList.toggle("checked")}function k(e,t){const n=v.querySelectorAll("li > input[type=checkbox]");let r=0;n.forEach(((e,n)=>{e===t&&(r=n)}));const o=JSON.parse(localStorage.getItem("tasks"))||[];o.forEach((t=>{console.log(r),t.index===r&&(t.completed=e,console.log(t))})),localStorage.setItem("tasks",JSON.stringify(o))}function y(e){console.log("populating");const t=document.createElement("li");t.classList.add("list-group-item","d-flex","align-items-center","py-0","pe-2");const n=document.createElement("p");n.innerText=e.description,n.classList.add("px-3","py-3","mb-0","w-100");const r=document.createElement("input");r.type="textarea",r.classList.add("text-edit","d-none","w-100"),r.value=e.description,r.addEventListener("change",b);const o=document.createElement("input");o.type="checkbox",o.checked=e.completed,o.classList.add("form-check-input");const c=document.createElement("div");c.innerHTML=f(),c.classList.add("ms-auto"),t.appendChild(o),t.appendChild(n),t.appendChild(r),t.appendChild(c),v.appendChild(t),o.addEventListener("change",(e=>function(e){x(e),e.checked?k(!0,e):k(!1,e)}(e.target))),o.checked&&x(o)}n(400),(JSON.parse(localStorage.getItem("tasks"))||[]).forEach((e=>y(e))),C(),window.addEventListener("DOMContentLoaded",(function(){const e=document.querySelector("#create-task-text");e.addEventListener("keydown",(t=>{if("Enter"===t.code){const t=JSON.parse(localStorage.getItem("tasks"))||[],n={description:e.value,completed:!1,index:t.length};t.push(n),localStorage.setItem("tasks",JSON.stringify(t)),y(n),e.value="",C(),console.log(t)}})),document.querySelector("#list-container > div > span").addEventListener("click",(e=>{const t=e.target.previousElementSibling,n=JSON.parse(localStorage.getItem("tasks"))||[],r={description:t.value,completed:!1,index:n.length};n.push(r),localStorage.setItem("tasks",JSON.stringify(n)),y(r),t.value="",C(),console.log(n)}))})),window.addEventListener("load",(()=>{const e=document.querySelector("#list-container");console.log("dom loaded"),e.classList.remove("d-none")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SSxFQUFLc0osVUFBVWxLLE9BQU8sYyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9tb2R1bGVzL3JlbW92ZVRhc2suanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0eWxlLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2ljb25zL3ZlcnQuc3ZnIiwid2VicGFjazovLy93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly8vd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly8vd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly8vd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly8vd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vL3dlYnBhY2svcnVudGltZS9qc29ucCBjaHVuayBsb2FkaW5nIiwid2VicGFjazovLy8uL3NyYy9zdHlsZS5zY3NzP2ZlYTQiLCJ3ZWJwYWNrOi8vLy4vc3JjL21vZHVsZXMvZWRpdFRhc2suanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL21vZHVsZXMvcG9wdWxhdGVMaXN0LmpzIiwid2VicGFjazovLy8uL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9hZGRUYXNrLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNsZWFyRGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2NsZWFyLWRpdicpO1xuY2xlYXJEaXYuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gIC8vIHJlbW92ZSBmcm9tIGxvY2FsU3RvcmFnZVxuICBsZXQgdGFza3MgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0YXNrcycpKSB8fCBbXTtcbiAgdGFza3MgPSB0YXNrcy5maWx0ZXIoKHRhc2spID0+IHRhc2suY29tcGxldGVkID09PSBmYWxzZSk7XG4gIC8vIHVwZGF0ZSBpbmRleFxuICB0YXNrcy5mb3JFYWNoKCh0YXNrLCBpbmRleCkgPT4geyB0YXNrLmluZGV4ID0gaW5kZXg7IH0pO1xuICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndGFza3MnLCBKU09OLnN0cmluZ2lmeSh0YXNrcykpO1xuXG4gIC8vIHJlbW92ZSBmcm9tIHVpXG4gIGNvbnN0IGNoZWNrQm94ZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcjbGlzdC1jb250YWluZXIgbGkgPiBpbnB1dFt0eXBlPWNoZWNrYm94XScpO1xuICBjaGVja0JveGVzLmZvckVhY2goKGJveCkgPT4ge1xuICAgIGlmIChib3guY2hlY2tlZCkgeyBib3gucGFyZW50RWxlbWVudC5yZW1vdmUoKTsgfVxuICB9KTtcbn0pOyIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyA9IG5ldyBVUkwoXCIuL2ljb25zL2NoZWNrZWQuc3ZnXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzFfX18gPSBuZXcgVVJMKFwiLi9pY29ucy9lbnRlci5wbmdcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzFfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiZGl2e2NvbG9yOmJsdWV9aW5wdXRbdHlwZT1jaGVja2JveF17Ym9yZGVyLXJhZGl1czoycHggIWltcG9ydGFudDtjdXJzb3I6cG9pbnRlcjt3aWR0aDoxLjNlbTtoZWlnaHQ6MS4yZW19aW5wdXRbdHlwZT1jaGVja2JveF06Y2hlY2tlZHtiYWNrZ3JvdW5kLWNvbG9yOnVuc2V0ICFpbXBvcnRhbnQ7Ym9yZGVyOm5vbmUgIWltcG9ydGFudDtiYWNrZ3JvdW5kLWltYWdlOnVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18gKyBcIikgIWltcG9ydGFudH1pbnB1dFt0eXBlPWNoZWNrYm94XTpmb2N1c3tib3gtc2hhZG93Om5vbmU7Ym9yZGVyLWNvbG9yOnVuc2V0fS5jaGVja2Vke2NvbG9yOiNhZmFmYWYgIWltcG9ydGFudH0uY2hlY2tlZCBwe3RleHQtZGVjb3JhdGlvbjpsaW5lLXRocm91Z2ggIWltcG9ydGFudH1zdmd7d2lkdGg6MjBweDtoZWlnaHQ6MjBweDtmaWxsOiNjYmNiY2J9dWx7Ym9yZGVyLXJhZGl1czowICFpbXBvcnRhbnR9dWw+bGl7Ym9yZGVyOm5vbmUgIWltcG9ydGFudDtib3JkZXItYm90dG9tOjFweCBzb2xpZCByZ2JhKDAsMCwwLC4xMjUpICFpbXBvcnRhbnR9I2xpc3QtY29udGFpbmVye2JveC1zaGFkb3c6MCAycHggOHB4IHJnYmEoMCwwLDAsLjE1KX0jbGlzdC1jb250YWluZXI+ZGl2IGlucHV0e2NvbG9yOiM5NDk0OTQ7d2lkdGg6MTAwJTtwYWRkaW5nOjFyZW0gMXJlbTtib3JkZXI6bm9uZTtib3JkZXItYm90dG9tOjFweCBzb2xpZCByZ2JhKDAsMCwwLC4xMjUpfSNsaXN0LWNvbnRhaW5lcj5kaXYgaW5wdXQ6OnBsYWNlaG9sZGVye2ZvbnQtc3R5bGU6aXRhbGljfSNsaXN0LWNvbnRhaW5lcj5kaXYgaW5wdXQ6Zm9jdXMtdmlzaWJsZXtvdXRsaW5lOm5vbmV9I2xpc3QtY29udGFpbmVyPmRpdiBzcGFuey13ZWJraXQtYXBwZWFyYW5jZTpub25lOy1tb3otYXBwZWFyYW5jZTpub25lO2FwcGVhcmFuY2U6bm9uZTtib3JkZXI6bm9uZTtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O3Bvc2l0aW9uOmFic29sdXRlO3JpZ2h0OjA7dG9wOjA7ei1pbmRleDowO3dpZHRoOjQwcHg7aGVpZ2h0OjEwMCU7YmFja2dyb3VuZC1pbWFnZTp1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19fICsgXCIpO2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDtiYWNrZ3JvdW5kLXBvc2l0aW9uOmNlbnRlcjtjdXJzb3I6cG9pbnRlcn0jY2xlYXItZGl2e2JhY2tncm91bmQtY29sb3I6I2Y2ZjZmNjtjb2xvcjojOTQ5NDk0O2N1cnNvcjpwb2ludGVyfSNjbGVhci1kaXY6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojZWVlfS50ZXh0LWVkaXR7Ym9yZGVyOm5vbmU7cGFkZGluZzoxcmVtIDFyZW07bWFyZ2luOjA7dGV4dC1kZWNvcmF0aW9uOm5vbmU7YmFja2dyb3VuZC1jb2xvcjp1bnNldH0udGV4dC1lZGl0OmZvY3VzLXZpc2libGV7b3V0bGluZTpub25lfS5lZGl0aW5ne2JhY2tncm91bmQtY29sb3I6I2ZkZmRiNyAhaW1wb3J0YW50fVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBLElBQ0UsVUFBQSxDQUdGLHFCQUNFLDRCQUFBLENBQ0EsY0FBQSxDQUNBLFdBQUEsQ0FDQSxZQUFBLENBRUEsNkJBQ0UsaUNBQUEsQ0FDQSxzQkFBQSxDQUNBLG1FQUFBLENBR0YsMkJBQ0UsZUFBQSxDQUNBLGtCQUFBLENBSUosU0FFRSx3QkFBQSxDQUVBLFdBQ0UsdUNBQUEsQ0FJSixJQUNFLFVBQUEsQ0FDQSxXQUFBLENBQ0EsWUFBQSxDQUdGLEdBQ0UsMEJBQUEsQ0FFQSxNQUNFLHNCQUFBLENBQ0EsbURBQUEsQ0FJSixnQkFDRSxvQ0FBQSxDQUdFLDBCQUNFLGFBQUEsQ0FDQSxVQUFBLENBQ0EsaUJBQUEsQ0FDQSxXQUFBLENBQ0Esd0NBQUEsQ0FFQSx1Q0FDRSxpQkFBQSxDQUdGLHdDQUNFLFlBQUEsQ0FJSix5QkFDRSx1QkFBQSxDQUNBLG9CQUFBLENBQ0EsZUFBQSxDQUNBLFdBQUEsQ0FDQSw0QkFBQSxDQUNBLGlCQUFBLENBQ0EsT0FBQSxDQUNBLEtBQUEsQ0FDQSxTQUFBLENBQ0EsVUFBQSxDQUNBLFdBQUEsQ0FDQSx3REFBQSxDQUNBLDJCQUFBLENBQ0EsMEJBQUEsQ0FDQSxjQUFBLENBS04sV0FDRSx3QkFBQSxDQUNBLGFBQUEsQ0FDQSxjQUFBLENBRUEsaUJBQ0UscUJBQUEsQ0FJSixXQUNFLFdBQUEsQ0FDQSxpQkFBQSxDQUNBLFFBQUEsQ0FDQSxvQkFBQSxDQUNBLHNCQUFBLENBRUEseUJBQ0UsWUFBQSxDQUlKLFNBQ0UsbUNBQUFcIixcInNvdXJjZXNDb250ZW50XCI6W1wiZGl2IHtcXHJcXG4gIGNvbG9yOiBibHVlO1xcclxcbn1cXHJcXG5cXHJcXG5pbnB1dFt0eXBlPVxcXCJjaGVja2JveFxcXCJdIHtcXHJcXG4gIGJvcmRlci1yYWRpdXM6IDJweCAhaW1wb3J0YW50O1xcclxcbiAgY3Vyc29yOiBwb2ludGVyO1xcclxcbiAgd2lkdGg6IDEuM2VtO1xcclxcbiAgaGVpZ2h0OiAxLjJlbTtcXHJcXG5cXHJcXG4gICY6Y2hlY2tlZCB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHVuc2V0ICFpbXBvcnRhbnQ7XFxyXFxuICAgIGJvcmRlcjogbm9uZSAhaW1wb3J0YW50O1xcclxcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXFxcIi4vaWNvbnMvY2hlY2tlZC5zdmdcXFwiKSAhaW1wb3J0YW50O1xcclxcbiAgfVxcclxcblxcclxcbiAgJjpmb2N1cyB7XFxyXFxuICAgIGJveC1zaGFkb3c6IG5vbmU7XFxyXFxuICAgIGJvcmRlci1jb2xvcjogdW5zZXQ7XFxyXFxuICB9XFxyXFxufVxcclxcblxcclxcbi5jaGVja2VkIHtcXHJcXG4gIC8vIGJhY2tncm91bmQtY29sb3I6ICMwYzg4ZTQgIWltcG9ydGFudDtcXHJcXG4gIGNvbG9yOiByZ2IoMTc1IDE3NSAxNzUpICFpbXBvcnRhbnQ7XFxyXFxuXFxyXFxuICBwIHtcXHJcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2ggIWltcG9ydGFudDtcXHJcXG4gIH1cXHJcXG59XFxyXFxuXFxyXFxuc3ZnIHtcXHJcXG4gIHdpZHRoOiAyMHB4O1xcclxcbiAgaGVpZ2h0OiAyMHB4O1xcclxcbiAgZmlsbDogI2NiY2JjYjtcXHJcXG59XFxyXFxuXFxyXFxudWwge1xcclxcbiAgYm9yZGVyLXJhZGl1czogMCAhaW1wb3J0YW50O1xcclxcblxcclxcbiAgPiBsaSB7XFxyXFxuICAgIGJvcmRlcjogbm9uZSAhaW1wb3J0YW50O1xcclxcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjEyNSkgIWltcG9ydGFudDtcXHJcXG4gIH1cXHJcXG59XFxyXFxuXFxyXFxuI2xpc3QtY29udGFpbmVyIHtcXHJcXG4gIGJveC1zaGFkb3c6IDAgMnB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xcclxcblxcclxcbiAgPiBkaXYge1xcclxcbiAgICBpbnB1dCB7XFxyXFxuICAgICAgY29sb3I6ICM5NDk0OTQ7XFxyXFxuICAgICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgICAgcGFkZGluZzogMXJlbSAxcmVtO1xcclxcbiAgICAgIGJvcmRlcjogbm9uZTtcXHJcXG4gICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjEyNSk7XFxyXFxuXFxyXFxuICAgICAgJjo6cGxhY2Vob2xkZXIge1xcclxcbiAgICAgICAgZm9udC1zdHlsZTogaXRhbGljO1xcclxcbiAgICAgIH1cXHJcXG5cXHJcXG4gICAgICAmOmZvY3VzLXZpc2libGUge1xcclxcbiAgICAgICAgb3V0bGluZTogbm9uZTtcXHJcXG4gICAgICB9XFxyXFxuICAgIH1cXHJcXG5cXHJcXG4gICAgc3BhbiB7XFxyXFxuICAgICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xcclxcbiAgICAgIC1tb3otYXBwZWFyYW5jZTogbm9uZTtcXHJcXG4gICAgICBhcHBlYXJhbmNlOiBub25lO1xcclxcbiAgICAgIGJvcmRlcjogbm9uZTtcXHJcXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXHJcXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICAgICAgcmlnaHQ6IDA7XFxyXFxuICAgICAgdG9wOiAwO1xcclxcbiAgICAgIHotaW5kZXg6IDA7XFxyXFxuICAgICAgd2lkdGg6IDQwcHg7XFxyXFxuICAgICAgaGVpZ2h0OiAxMDAlO1xcclxcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcXFwiLi9pY29ucy9lbnRlci5wbmdcXFwiKTtcXHJcXG4gICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xcclxcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcXHJcXG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICAgIH1cXHJcXG4gIH1cXHJcXG59XFxyXFxuXFxyXFxuI2NsZWFyLWRpdiB7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZmNmY2O1xcclxcbiAgY29sb3I6ICM5NDk0OTQ7XFxyXFxuICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuXFxyXFxuICAmOmhvdmVyIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VlZTtcXHJcXG4gIH1cXHJcXG59XFxyXFxuXFxyXFxuLnRleHQtZWRpdCB7XFxyXFxuICBib3JkZXI6IG5vbmU7XFxyXFxuICBwYWRkaW5nOiAxcmVtIDFyZW07XFxyXFxuICBtYXJnaW46IDA7XFxyXFxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB1bnNldDtcXHJcXG5cXHJcXG4gICY6Zm9jdXMtdmlzaWJsZSB7XFxyXFxuICAgIG91dGxpbmU6IG5vbmU7XFxyXFxuICB9XFxyXFxufVxcclxcblxcclxcbi5lZGl0aW5nIHtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZGZkYjcgIWltcG9ydGFudDtcXHJcXG59XFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXJsLCBvcHRpb25zKSB7XG4gIGlmICghb3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuXG4gIGlmICghdXJsKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuXG4gIHVybCA9IFN0cmluZyh1cmwuX19lc01vZHVsZSA/IHVybC5kZWZhdWx0IDogdXJsKTsgLy8gSWYgdXJsIGlzIGFscmVhZHkgd3JhcHBlZCBpbiBxdW90ZXMsIHJlbW92ZSB0aGVtXG5cbiAgaWYgKC9eWydcIl0uKlsnXCJdJC8udGVzdCh1cmwpKSB7XG4gICAgdXJsID0gdXJsLnNsaWNlKDEsIC0xKTtcbiAgfVxuXG4gIGlmIChvcHRpb25zLmhhc2gpIHtcbiAgICB1cmwgKz0gb3B0aW9ucy5oYXNoO1xuICB9IC8vIFNob3VsZCB1cmwgYmUgd3JhcHBlZD9cbiAgLy8gU2VlIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3MtdmFsdWVzLTMvI3VybHNcblxuXG4gIGlmICgvW1wiJygpIFxcdFxcbl18KCUyMCkvLnRlc3QodXJsKSB8fCBvcHRpb25zLm5lZWRRdW90ZXMpIHtcbiAgICByZXR1cm4gXCJcXFwiXCIuY29uY2F0KHVybC5yZXBsYWNlKC9cIi9nLCAnXFxcXFwiJykucmVwbGFjZSgvXFxuL2csIFwiXFxcXG5cIiksIFwiXFxcIlwiKTtcbiAgfVxuXG4gIHJldHVybiB1cmw7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgXCJcIikuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcblxuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG5cbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpOyAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cblxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG5cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG5cbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG5cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cblxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG5cbiAgY3NzICs9IG9iai5jc3M7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIm1vZHVsZS5leHBvcnRzID0gXCI8c3ZnIHhtbG5zOnhsaW5rPVxcXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIGNsYXNzPVxcXCJtb3ZlIGljb24tbW9yZS12ZXJ0XFxcIj48ZGVmcz48c3ltYm9sIGlkPVxcXCJpY29uLW1vcmUtdmVydFxcXCIgdmlld0JveD1cXFwiMCAwIDUxMiA1MTJcXFwiPjxwYXRoIGQ9XFxcIm0yNTYgMTI4YzM1IDAgNjQtMjkgNjQtNjQgMC0zNS0yOS02NC02NC02NC0zNSAwLTY0IDI5LTY0IDY0IDAgMzUgMjkgNjQgNjQgNjR6IG0wIDY0Yy0zNSAwLTY0IDI5LTY0IDY0IDAgMzUgMjkgNjQgNjQgNjQgMzUgMCA2NC0yOSA2NC02NCAwLTM1LTI5LTY0LTY0LTY0eiBtMCAxOTJjLTM1IDAtNjQgMjktNjQgNjQgMCAzNSAyOSA2NCA2NCA2NCAzNSAwIDY0LTI5IDY0LTY0IDAtMzUtMjktNjQtNjQtNjR6XFxcIj48L3BhdGg+PC9zeW1ib2w+PC9kZWZzPjx1c2UgeGxpbms6aHJlZj1cXFwiI2ljb24tbW9yZS12ZXJ0XFxcIj48L3VzZT48L3N2Zz5cIiIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4vLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuX193ZWJwYWNrX3JlcXVpcmVfXy5tID0gX193ZWJwYWNrX21vZHVsZXNfXztcblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmNcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSBzY3JpcHRVcmwgPSBzY3JpcHRzW3NjcmlwdHMubGVuZ3RoIC0gMV0uc3JjXG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIl9fd2VicGFja19yZXF1aXJlX18uYiA9IGRvY3VtZW50LmJhc2VVUkkgfHwgc2VsZi5sb2NhdGlvbi5ocmVmO1xuXG4vLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuLy8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4vLyBbcmVzb2x2ZSwgcmVqZWN0LCBQcm9taXNlXSA9IGNodW5rIGxvYWRpbmcsIDAgPSBjaHVuayBsb2FkZWRcbnZhciBpbnN0YWxsZWRDaHVua3MgPSB7XG5cdDE3OTogMFxufTtcblxuLy8gbm8gY2h1bmsgb24gZGVtYW5kIGxvYWRpbmdcblxuLy8gbm8gcHJlZmV0Y2hpbmdcblxuLy8gbm8gcHJlbG9hZGVkXG5cbi8vIG5vIEhNUlxuXG4vLyBubyBITVIgbWFuaWZlc3RcblxuLy8gbm8gb24gY2h1bmtzIGxvYWRlZFxuXG4vLyBubyBqc29ucCBmdW5jdGlvbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzRdLnVzZVsyXSEuLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5zY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzRdLnVzZVsyXSEuLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5zY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiZXhwb3J0IGZ1bmN0aW9uIHRleHRBcmVhQ2hhbmdlSGFuZGxlcihlKSB7XG4gIGNvbnN0IG5ld1RleHQgPSBlLnRhcmdldC52YWx1ZTtcbiAgY29uc29sZS5sb2cobmV3VGV4dCk7XG5cbiAgLy8gZmluZCBpbmRleCBvZiB0ZXh0YXJlYVxuICBjb25zdCBsaXN0RWxlbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcjbGlzdC1jb250YWluZXIgbGknKTtcbiAgbGV0IGluZGV4ID0gMDtcbiAgbGlzdEVsZW1lbnRzLmZvckVhY2goKGVsLCBpKSA9PiB7XG4gICAgaWYgKGVsID09PSBlLnRhcmdldC5wYXJlbnRFbGVtZW50KSB7XG4gICAgICBpbmRleCA9IGk7XG4gICAgfVxuICB9KTtcblxuICAvLyB1cGRhdGUgbG9jYWwgc3RvcmFnZVxuICBjb25zdCB0YXNrcyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rhc2tzJykpIHx8IFtdO1xuICBPYmplY3Qua2V5cyh0YXNrcykuZm9yRWFjaCgoa2V5LCBpKSA9PiB7XG4gICAgaWYgKGkgPT09IGluZGV4KSB7XG4gICAgICB0YXNrc1trZXldLmRlc2NyaXB0aW9uID0gbmV3VGV4dDtcbiAgICB9XG4gIH0pO1xuICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndGFza3MnLCBKU09OLnN0cmluZ2lmeSh0YXNrcykpO1xuXG4gIC8vIHVwZGF0ZSBwIGVsZW1lbnRcbiAgZS50YXJnZXQucHJldmlvdXNFbGVtZW50U2libGluZy5pbm5lclRleHQgPSBuZXdUZXh0O1xufVxuXG5sZXQgZWRpdGVkRWxlbWVudHMgPSB7fTtcblxuZXhwb3J0IGZ1bmN0aW9uIGFkZEVkaXRIYW5kbGVycygpIHtcbiAgY29uc3QgcFRhZ3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcjbGlzdC1jb250YWluZXIgcCcpO1xuICBjb25zb2xlLmxvZyhwVGFncyk7XG4gIHBUYWdzLmZvckVhY2goKHRhZykgPT4ge1xuICAgIGlmICghdGFnLmhhc0F0dHJpYnV0ZSgnbGlzdGVuZXJPbkNsaWNrJykpIHsgLy8gY2hlY2sgaWYgdGhlcmUgaWUgYWxyZWFkeSBsaXN0ZW5lclxuICAgICAgdGFnLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coZS50YXJnZXQpO1xuICAgICAgICBlLnRhcmdldC5jbGFzc0xpc3QuYWRkKCdkLW5vbmUnKTtcbiAgICAgICAgZS50YXJnZXQubmV4dEVsZW1lbnRTaWJsaW5nLmNsYXNzTGlzdC5yZW1vdmUoJ2Qtbm9uZScpO1xuICAgICAgICBlZGl0ZWRFbGVtZW50cy50YXJnZXQgPSBlLnRhcmdldDtcbiAgICAgICAgZWRpdGVkRWxlbWVudHMuc2libGluZyA9IGUudGFyZ2V0Lm5leHRFbGVtZW50U2libGluZztcblxuICAgICAgICAvLyBhZGQgbGlzdCBlbGVtZW50IGVkaXQgc3R5bGluZ1xuICAgICAgICBlLnRhcmdldC5wYXJlbnRFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2VkaXRpbmcnKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG59XG5cbi8vIGVkaXQgZXZlbnQgb3V0ZXIgY2xpY2sgaGFuZGxlclxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xuICBjb25zb2xlLmxvZyhlLnRhcmdldCA9PT0gZWRpdGVkRWxlbWVudHMuc2libGluZyk7XG4gIGNvbnNvbGUubG9nKGUudGFyZ2V0ID09PSBlZGl0ZWRFbGVtZW50cy50YXJnZXQpO1xuICAvLyBjb25zb2xlLmxvZyhlZGl0ZWRFbGVtZW50cylcbiAgaWYgKGUudGFyZ2V0ICE9PSBlZGl0ZWRFbGVtZW50cy50YXJnZXQgJiYgZS50YXJnZXQgIT09IGVkaXRlZEVsZW1lbnRzLnNpYmxpbmdcbiAgICAgICAgJiYgT2JqZWN0LmtleXMoZWRpdGVkRWxlbWVudHMpLmxlbmd0aCkge1xuICAgIC8vIHJlbW92ZSBsaXN0IGl0ZW0gc3R5bGluZ1xuICAgIGVkaXRlZEVsZW1lbnRzLnNpYmxpbmcucGFyZW50RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdlZGl0aW5nJyk7XG5cbiAgICBlZGl0ZWRFbGVtZW50cy50YXJnZXQuY2xhc3NMaXN0LnJlbW92ZSgnZC1ub25lJyk7XG4gICAgZWRpdGVkRWxlbWVudHMuc2libGluZy5jbGFzc0xpc3QuYWRkKCdkLW5vbmUnKTtcbiAgICBlZGl0ZWRFbGVtZW50cyA9IHt9O1xuICB9XG59LCB0cnVlKTsiLCJpbXBvcnQgdmVydEJ0blN2ZyBmcm9tICcuLi9pY29ucy92ZXJ0LnN2Zyc7XG5pbXBvcnQgeyB0ZXh0QXJlYUNoYW5nZUhhbmRsZXIgfSBmcm9tICcuL2VkaXRUYXNrJztcblxuY29uc3QgbGlzdENvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNsaXN0LWNvbnRhaW5lcicpO1xuY29uc3QgdWwgPSBsaXN0Q29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJ3VsJyk7XG5cbmZ1bmN0aW9uIGxpQ2hlY2tlZFRvZ2dsZShjaGVja0JveCkge1xuICBjaGVja0JveC5wYXJlbnRFbGVtZW50LmNsYXNzTGlzdC50b2dnbGUoJ2NoZWNrZWQnKTtcbn1cblxuZnVuY3Rpb24gdXBkYXRlTG9jYWxTdG9yYWdlKGNvbXBsZXRlU3RhdHVzLCBjaGVja0JveCkge1xuICAvLyBmaW5kIHRhc2sgbG9jYXRpb25cbiAgY29uc3QgY2hlY2tCb3hlcyA9IHVsLnF1ZXJ5U2VsZWN0b3JBbGwoJ2xpID4gaW5wdXRbdHlwZT1jaGVja2JveF0nKTtcbiAgbGV0IGluZGV4ID0gMDtcbiAgY2hlY2tCb3hlcy5mb3JFYWNoKChlbCwgaSkgPT4ge1xuICAgIGlmIChlbCA9PT0gY2hlY2tCb3gpIHtcbiAgICAgIGluZGV4ID0gaTtcbiAgICB9XG4gIH0pO1xuICAvLyBmaW5kIHRhc2sgd2l0aGluIGxvY2Fsc3RvcmFnZVxuICBjb25zdCB0YXNrcyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rhc2tzJykpIHx8IFtdO1xuICB0YXNrcy5mb3JFYWNoKCh0YXNrKSA9PiB7XG4gICAgY29uc29sZS5sb2coaW5kZXgpO1xuICAgIGlmICh0YXNrLmluZGV4ID09PSBpbmRleCkge1xuICAgICAgdGFzay5jb21wbGV0ZWQgPSBjb21wbGV0ZVN0YXR1cztcbiAgICAgIGNvbnNvbGUubG9nKHRhc2spO1xuICAgIH1cbiAgfSk7XG4gIC8vIHVwZGF0ZSBsb2NhbHN0b3JhZ2VcbiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3Rhc2tzJywgSlNPTi5zdHJpbmdpZnkodGFza3MpKTtcbn1cblxuZnVuY3Rpb24gY2hlY2tCb3hIYW5kbGVyKGNoZWNrQm94KSB7XG4gIGxpQ2hlY2tlZFRvZ2dsZShjaGVja0JveCk7IC8vIHVwZGF0ZSBzdHlsZVxuICBpZiAoY2hlY2tCb3guY2hlY2tlZCkge1xuICAgIHVwZGF0ZUxvY2FsU3RvcmFnZSh0cnVlLCBjaGVja0JveCk7XG4gIH0gZWxzZSB7XG4gICAgdXBkYXRlTG9jYWxTdG9yYWdlKGZhbHNlLCBjaGVja0JveCk7XG4gIH1cbn1cblxuLy8gcG9wdWxhdGUgdGFzayBsaXN0XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwb3B1bGF0ZUxpc3QodGFzaykge1xuICBjb25zb2xlLmxvZygncG9wdWxhdGluZycpO1xuICBjb25zdCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gIGxpLmNsYXNzTGlzdC5hZGQoJ2xpc3QtZ3JvdXAtaXRlbScsICdkLWZsZXgnLCAnYWxpZ24taXRlbXMtY2VudGVyJywgJ3B5LTAnLCAncGUtMicpO1xuXG4gIGNvbnN0IHAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gIHAuaW5uZXJUZXh0ID0gdGFzay5kZXNjcmlwdGlvbjtcbiAgcC5jbGFzc0xpc3QuYWRkKCdweC0zJywgJ3B5LTMnLCAnbWItMCcsICd3LTEwMCcpO1xuXG4gIGNvbnN0IHRleHRBcmVhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgdGV4dEFyZWEudHlwZSA9ICd0ZXh0YXJlYSc7XG4gIHRleHRBcmVhLmNsYXNzTGlzdC5hZGQoJ3RleHQtZWRpdCcsICdkLW5vbmUnLCAndy0xMDAnKTtcbiAgdGV4dEFyZWEudmFsdWUgPSB0YXNrLmRlc2NyaXB0aW9uO1xuICB0ZXh0QXJlYS5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCB0ZXh0QXJlYUNoYW5nZUhhbmRsZXIpO1xuXG4gIGNvbnN0IGNoZWNrQm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgY2hlY2tCb3gudHlwZSA9ICdjaGVja2JveCc7XG4gIGNoZWNrQm94LmNoZWNrZWQgPSB0YXNrLmNvbXBsZXRlZDtcbiAgY2hlY2tCb3guY2xhc3NMaXN0LmFkZCgnZm9ybS1jaGVjay1pbnB1dCcpO1xuXG4gIGNvbnN0IHZlcnRCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgdmVydEJ0bi5pbm5lckhUTUwgPSB2ZXJ0QnRuU3ZnO1xuICB2ZXJ0QnRuLmNsYXNzTGlzdC5hZGQoJ21zLWF1dG8nKTtcblxuICBsaS5hcHBlbmRDaGlsZChjaGVja0JveCk7XG4gIGxpLmFwcGVuZENoaWxkKHApO1xuICBsaS5hcHBlbmRDaGlsZCh0ZXh0QXJlYSk7XG4gIGxpLmFwcGVuZENoaWxkKHZlcnRCdG4pO1xuICB1bC5hcHBlbmRDaGlsZChsaSk7XG5cbiAgLy8gc3R5bGluZyBmb3IgY29tcGxldGVkIGVsZW1lbnRzXG4gIGNoZWNrQm94LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiBjaGVja0JveEhhbmRsZXIoZS50YXJnZXQpKTtcbiAgaWYgKGNoZWNrQm94LmNoZWNrZWQpIHsgbGlDaGVja2VkVG9nZ2xlKGNoZWNrQm94KTsgfVxufSIsIi8vIGltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgJy4vc3R5bGUuc2Nzcyc7XG5pbXBvcnQgcG9wdWxhdGVMaXN0IGZyb20gJy4vbW9kdWxlcy9wb3B1bGF0ZUxpc3QnO1xuaW1wb3J0ICcuL21vZHVsZXMvcmVtb3ZlVGFzayc7XG5pbXBvcnQgYWRkVGFza0hhbmRsZXIgZnJvbSAnLi9tb2R1bGVzL2FkZFRhc2snO1xuaW1wb3J0IHsgYWRkRWRpdEhhbmRsZXJzIH0gZnJvbSAnLi9tb2R1bGVzL2VkaXRUYXNrJztcblxuLy8gcG9wdWxhdGUgVUkgb24gcGFnZSBsb2FkXG5jb25zdCB0YXNrcyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rhc2tzJykpIHx8IFtdO1xudGFza3MuZm9yRWFjaCgodGFzaykgPT4gcG9wdWxhdGVMaXN0KHRhc2spKTtcbmFkZEVkaXRIYW5kbGVycygpO1xuXG4vLyBjcmVhdGUgdGFzayBoYW5kbGVyXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGFkZFRhc2tIYW5kbGVyKTtcblxuLy8gcHJldmVudCBiYWQgdWkgZHVyaW5nIGxvYWRcbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgKCkgPT4ge1xuICBjb25zdCBsaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2xpc3QtY29udGFpbmVyJyk7XG4gIGNvbnNvbGUubG9nKCdkb20gbG9hZGVkJyk7XG4gIGxpc3QuY2xhc3NMaXN0LnJlbW92ZSgnZC1ub25lJyk7XG59KTsiLCJpbXBvcnQgcG9wdWxhdGVMaXN0IGZyb20gJy4vcG9wdWxhdGVMaXN0JztcbmltcG9ydCB7IGFkZEVkaXRIYW5kbGVycyB9IGZyb20gJy4vZWRpdFRhc2snO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhZGRUYXNrSGFuZGxlcigpIHtcbiAgLy8gbmV3IHRhc2sgLSBrZXlib2FyZCBsaXN0ZW5lclxuICBjb25zdCBpbnB1dFRhc2sgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY3JlYXRlLXRhc2stdGV4dCcpO1xuICBpbnB1dFRhc2suYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIChlKSA9PiB7XG4gICAgaWYgKGUuY29kZSA9PT0gJ0VudGVyJykge1xuICAgICAgY29uc3QgdGFza3MgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0YXNrcycpKSB8fCBbXTtcbiAgICAgIGNvbnN0IG5ld1Rhc2sgPSB7IGRlc2NyaXB0aW9uOiBpbnB1dFRhc2sudmFsdWUsIGNvbXBsZXRlZDogZmFsc2UsIGluZGV4OiB0YXNrcy5sZW5ndGggfTtcbiAgICAgIHRhc2tzLnB1c2gobmV3VGFzayk7XG4gICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndGFza3MnLCBKU09OLnN0cmluZ2lmeSh0YXNrcykpO1xuICAgICAgcG9wdWxhdGVMaXN0KG5ld1Rhc2spO1xuICAgICAgaW5wdXRUYXNrLnZhbHVlID0gJyc7XG4gICAgICBhZGRFZGl0SGFuZGxlcnMoKTsgLy8gZWRpdCBoYW5kbGVyIGZvciBuZXcgdGFza1xuICAgICAgY29uc29sZS5sb2codGFza3MpO1xuICAgIH1cbiAgfSk7XG5cbiAgLy8gbmV3IHRhc2sgYnV0dG9uIGxpc3RlbmVyXG4gIGNvbnN0IGZvcm1BZGRCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbGlzdC1jb250YWluZXIgPiBkaXYgPiBzcGFuJyk7XG4gIGZvcm1BZGRCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xuICAgIGNvbnN0IHRhc2tJbnB1dCA9IGUudGFyZ2V0LnByZXZpb3VzRWxlbWVudFNpYmxpbmc7XG4gICAgY29uc3QgdGFza3MgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0YXNrcycpKSB8fCBbXTtcbiAgICBjb25zdCBuZXdUYXNrID0geyBkZXNjcmlwdGlvbjogdGFza0lucHV0LnZhbHVlLCBjb21wbGV0ZWQ6IGZhbHNlLCBpbmRleDogdGFza3MubGVuZ3RoIH07XG4gICAgdGFza3MucHVzaChuZXdUYXNrKTtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndGFza3MnLCBKU09OLnN0cmluZ2lmeSh0YXNrcykpO1xuICAgIHBvcHVsYXRlTGlzdChuZXdUYXNrKTtcbiAgICB0YXNrSW5wdXQudmFsdWUgPSAnJztcbiAgICBhZGRFZGl0SGFuZGxlcnMoKTsgLy8gZWRpdCBoYW5kbGVyIGZvciBuZXcgdGFza1xuICAgIGNvbnNvbGUubG9nKHRhc2tzKTtcbiAgfSk7XG59Il0sIm5hbWVzIjpbImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImFkZEV2ZW50TGlzdGVuZXIiLCJ0YXNrcyIsIkpTT04iLCJwYXJzZSIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJmaWx0ZXIiLCJ0YXNrIiwiY29tcGxldGVkIiwiZm9yRWFjaCIsImluZGV4Iiwic2V0SXRlbSIsInN0cmluZ2lmeSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJib3giLCJjaGVja2VkIiwicGFyZW50RWxlbWVudCIsInJlbW92ZSIsIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fIiwiVVJMIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzFfX18iLCJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwidXJsIiwib3B0aW9ucyIsIlN0cmluZyIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwidGVzdCIsInNsaWNlIiwiaGFzaCIsIm5lZWRRdW90ZXMiLCJyZXBsYWNlIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2UiLCJzb3VyY2VSb290Iiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0Iiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibSIsIm4iLCJnZXR0ZXIiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwibG9jYXRpb24iLCJjdXJyZW50U2NyaXB0Iiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwicCIsImIiLCJiYXNlVVJJIiwic2VsZiIsImhyZWYiLCJ0ZXh0QXJlYUNoYW5nZUhhbmRsZXIiLCJuZXdUZXh0IiwidmFsdWUiLCJjb25zb2xlIiwibG9nIiwibGlzdEVsZW1lbnRzIiwiZWwiLCJrZXlzIiwiZGVzY3JpcHRpb24iLCJwcmV2aW91c0VsZW1lbnRTaWJsaW5nIiwiaW5uZXJUZXh0IiwiZWRpdGVkRWxlbWVudHMiLCJhZGRFZGl0SGFuZGxlcnMiLCJwVGFncyIsInRhZyIsImhhc0F0dHJpYnV0ZSIsImNsYXNzTGlzdCIsImFkZCIsIm5leHRFbGVtZW50U2libGluZyIsInNpYmxpbmciLCJ1bCIsImxpQ2hlY2tlZFRvZ2dsZSIsImNoZWNrQm94IiwidG9nZ2xlIiwidXBkYXRlTG9jYWxTdG9yYWdlIiwiY29tcGxldGVTdGF0dXMiLCJjaGVja0JveGVzIiwicG9wdWxhdGVMaXN0IiwibGkiLCJ0ZXh0QXJlYSIsInR5cGUiLCJ2ZXJ0QnRuIiwiaW5uZXJIVE1MIiwidmVydEJ0blN2ZyIsImNoZWNrQm94SGFuZGxlciIsImlucHV0VGFzayIsImNvZGUiLCJuZXdUYXNrIiwidGFza0lucHV0Il0sInNvdXJjZVJvb3QiOiIifQ==