(()=>{var e={147:(e,t,n)=>{"use strict";n.d(t,{Z:()=>m});var r=n(537),o=n.n(r),i=n(645),c=n.n(i),a=n(667),s=n.n(a),l=new URL(n(322),n.b),d=new URL(n(333),n.b),A=c()(o()),u=s()(l),p=s()(d);A.push([e.id,"div{color:blue}input[type=checkbox]{border-radius:2px !important;cursor:pointer;width:1.3em;height:1.2em}input[type=checkbox]:checked{background-color:unset !important;border:none !important;background-image:url("+u+") !important}input[type=checkbox]:focus{box-shadow:none;border-color:unset}.checked{color:#afafaf !important}.checked p{text-decoration:line-through !important}svg{width:20px;height:20px;fill:#cbcbcb}ul{border-radius:0 !important}ul>li{border:none !important;border-bottom:1px solid rgba(0,0,0,.125) !important}#list-container{box-shadow:0 2px 8px rgba(0,0,0,.15)}#list-container>div input{color:#949494;width:100%;padding:1rem 1rem;border:none;border-bottom:1px solid rgba(0,0,0,.125)}#list-container>div input::placeholder{font-style:italic}#list-container>div input:focus-visible{outline:none}#list-container>div span{-webkit-appearance:none;-moz-appearance:none;appearance:none;border:none;background-color:transparent;position:absolute;right:0;top:0;z-index:0;width:40px;height:100%;background-image:url("+p+");background-repeat:no-repeat;background-position:center;cursor:pointer}#remove-selected{background-color:#f6f6f6;color:#949494;cursor:pointer}#remove-selected:hover{background-color:#eee}.text-edit{border:none;padding:1rem 1rem;margin:0;text-decoration:none;background-color:unset}.text-edit:focus-visible{outline:none}.editing{background-color:#fdfdb7 !important}","",{version:3,sources:["webpack://./src/style.scss"],names:[],mappings:"AAAA,IACE,UAAA,CAGF,qBACE,4BAAA,CACA,cAAA,CACA,WAAA,CACA,YAAA,CAEA,6BACE,iCAAA,CACA,sBAAA,CACA,mEAAA,CAGF,2BACE,eAAA,CACA,kBAAA,CAIJ,SAEE,wBAAA,CAEA,WACE,uCAAA,CAIJ,IACE,UAAA,CACA,WAAA,CACA,YAAA,CAGF,GACE,0BAAA,CAEA,MACE,sBAAA,CACA,mDAAA,CAIJ,gBACE,oCAAA,CAGE,0BACE,aAAA,CACA,UAAA,CACA,iBAAA,CACA,WAAA,CACA,wCAAA,CAEA,uCACE,iBAAA,CAGF,wCACE,YAAA,CAIJ,yBACE,uBAAA,CACA,oBAAA,CACA,eAAA,CACA,WAAA,CACA,4BAAA,CACA,iBAAA,CACA,OAAA,CACA,KAAA,CACA,SAAA,CACA,UAAA,CACA,WAAA,CACA,wDAAA,CACA,2BAAA,CACA,0BAAA,CACA,cAAA,CAKN,iBACE,wBAAA,CACA,aAAA,CACA,cAAA,CAEA,uBACE,qBAAA,CAIJ,WACE,WAAA,CACA,iBAAA,CACA,QAAA,CACA,oBAAA,CACA,sBAAA,CAEA,yBACE,YAAA,CAIJ,SACE,mCAAA",sourcesContent:['div {\r\n  color: blue;\r\n}\r\n\r\ninput[type="checkbox"] {\r\n  border-radius: 2px !important;\r\n  cursor: pointer;\r\n  width: 1.3em;\r\n  height: 1.2em;\r\n\r\n  &:checked {\r\n    background-color: unset !important;\r\n    border: none !important;\r\n    background-image: url("./icons/checked.svg") !important;\r\n  }\r\n\r\n  &:focus {\r\n    box-shadow: none;\r\n    border-color: unset;\r\n  }\r\n}\r\n\r\n.checked {\r\n  // background-color: #0c88e4 !important;\r\n  color: rgb(175 175 175) !important;\r\n\r\n  p {\r\n    text-decoration: line-through !important;\r\n  }\r\n}\r\n\r\nsvg {\r\n  width: 20px;\r\n  height: 20px;\r\n  fill: #cbcbcb;\r\n}\r\n\r\nul {\r\n  border-radius: 0 !important;\r\n\r\n  > li {\r\n    border: none !important;\r\n    border-bottom: 1px solid rgba(0, 0, 0, 0.125) !important;\r\n  }\r\n}\r\n\r\n#list-container {\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\r\n\r\n  > div {\r\n    input {\r\n      color: #949494;\r\n      width: 100%;\r\n      padding: 1rem 1rem;\r\n      border: none;\r\n      border-bottom: 1px solid rgba(0, 0, 0, 0.125);\r\n\r\n      &::placeholder {\r\n        font-style: italic;\r\n      }\r\n\r\n      &:focus-visible {\r\n        outline: none;\r\n      }\r\n    }\r\n\r\n    span {\r\n      -webkit-appearance: none;\r\n      -moz-appearance: none;\r\n      appearance: none;\r\n      border: none;\r\n      background-color: transparent;\r\n      position: absolute;\r\n      right: 0;\r\n      top: 0;\r\n      z-index: 0;\r\n      width: 40px;\r\n      height: 100%;\r\n      background-image: url("./icons/enter.png");\r\n      background-repeat: no-repeat;\r\n      background-position: center;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n}\r\n\r\n#remove-selected {\r\n  background-color: #f6f6f6;\r\n  color: #949494;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #eee;\r\n  }\r\n}\r\n\r\n.text-edit {\r\n  border: none;\r\n  padding: 1rem 1rem;\r\n  margin: 0;\r\n  text-decoration: none;\r\n  background-color: unset;\r\n\r\n  &:focus-visible {\r\n    outline: none;\r\n  }\r\n}\r\n\r\n.editing {\r\n  background-color: #fdfdb7 !important;\r\n}\r\n'],sourceRoot:""}]);const m=A},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(r)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(c[s]=!0)}for(var l=0;l<e.length;l++){var d=[].concat(e[l]);r&&c[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),t.push(d))}},t}},667:e=>{"use strict";e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),c=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(c).concat([i]).join("\n")}return[t].join("\n")}},379:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var i={},c=[],a=0;a<e.length;a++){var s=e[a],l=r.base?s[0]+r.base:s[0],d=i[l]||0,A="".concat(l," ").concat(d);i[l]=d+1;var u=n(A),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)t[u].references++,t[u].updater(p);else{var m=o(p,r);r.byIndex=a,t.splice(a,0,{identifier:A,updater:m,references:1})}c.push(A)}return c}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var c=0;c<i.length;c++){var a=n(i[c]);t[a].references--}for(var s=r(e,o),l=0;l<i.length;l++){var d=n(i[l]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}i=s}}},569:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{"use strict";e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},485:e=>{e.exports='<svg xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2000/svg" class="icon-more-vert"><defs><symbol id="icon-more-vert" viewBox="0 0 512 512"><path d="m256 128c35 0 64-29 64-64 0-35-29-64-64-64-35 0-64 29-64 64 0 35 29 64 64 64z m0 64c-35 0-64 29-64 64 0 35 29 64 64 64 35 0 64-29 64-64 0-35-29-64-64-64z m0 192c-35 0-64 29-64 64 0 35 29 64 64 64 35 0 64-29 64-64 0-35-29-64-64-64z"></path></symbol></defs><use xlink:href="#icon-more-vert"></use></svg>'},322:(e,t,n)=>{"use strict";e.exports=n.p+"60bec4863a610ee62d4b.svg"},333:(e,t,n)=>{"use strict";e.exports=n.p+"fa544f635765db738d2e.png"}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={id:r,exports:{}};return e[r](i,i.exports,n),i.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,(()=>{"use strict";var e=n(379),t=n.n(e),r=n(795),o=n.n(r),i=n(569),c=n.n(i),a=n(565),s=n.n(a),l=n(216),d=n.n(l),A=n(589),u=n.n(A),p=n(147),m={};m.styleTagTransform=u(),m.setAttributes=s(),m.insert=c().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=d(),t()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;var g=n(485),b=n.n(g);let f={};function C(){document.querySelectorAll("#list-container p").forEach((e=>{e.hasAttribute("listenerOnClick")||e.addEventListener("click",(e=>{e.target.classList.add("d-none"),e.target.nextElementSibling.classList.remove("d-none"),f.target=e.target,f.sibling=e.target.nextElementSibling,e.target.parentElement.classList.add("editing")}))}))}function h(e){const t=e.target.value,n=document.querySelectorAll("#list-container li");let r=0;n.forEach(((t,n)=>{t===e.target.parentElement&&(r=n)}));const o=JSON.parse(localStorage.getItem("tasks"))||[];Object.keys(o).forEach(((e,n)=>{n===r&&(o[e].description=t)})),localStorage.setItem("tasks",JSON.stringify(o)),e.target.previousElementSibling.innerText=t}function v(e){"Enter"===e.code&&(e.target.blur(),e.target.parentElement.classList.remove("editing"))}function x(e){e.parentElement.classList.toggle("checked")}function E(e,t){const n=document.querySelectorAll("#list-container li > input[type=checkbox]");let r=0;n.forEach(((e,n)=>{e===t&&(r=n)}));const o=JSON.parse(localStorage.getItem("tasks"))||[];o.forEach((t=>{t.index===r&&(t.completed=e)})),localStorage.setItem("tasks",JSON.stringify(o))}function k(e){const t=e.target;x(t),t.checked?E(!0,t):E(!1,t)}function y(e){const t=document.createElement("li");t.classList.add("list-group-item","d-flex","align-items-center","py-0","pe-2");const n=document.createElement("p");n.innerHTML=e.description,n.classList.add("px-3","py-3","mb-0","w-100");const r=document.createElement("input");r.type="textarea",r.classList.add("text-edit","d-none","w-100"),r.value=e.description,r.addEventListener("change",h),r.addEventListener("keydown",v);const o=document.createElement("input");o.type="checkbox",o.checked=e.completed,o.classList.add("form-check-input");const i=document.createElement("div");i.innerHTML=b(),i.classList.add("ms-auto"),t.appendChild(o),t.appendChild(n),t.appendChild(r),t.appendChild(i),document.querySelector("#list-container ul").appendChild(t),o.addEventListener("change",k),o.checked&&x(o)}function w(e){const t=JSON.parse(localStorage.getItem("tasks"))||[],n={description:e.value,completed:!1,index:t.length};t.push(n),localStorage.setItem("tasks",JSON.stringify(t)),y(n),e.value=""}document.addEventListener("click",(e=>{e.target!==f.target&&e.target!==f.sibling&&Object.keys(f).length&&(f.sibling.parentElement.classList.remove("editing"),f.target.classList.remove("d-none"),f.sibling.classList.add("d-none"),f={})}),!0),(JSON.parse(localStorage.getItem("tasks"))||[]).forEach((e=>y(e))),C(),document.querySelector("#remove-selected").addEventListener("click",(function(){let e=JSON.parse(localStorage.getItem("tasks"))||[];e=e.filter((e=>!1===e.completed)),e.forEach(((e,t)=>{e.index=t})),localStorage.setItem("tasks",JSON.stringify(e)),document.querySelectorAll("#list-container li > input[type=checkbox]").forEach((e=>{e.checked&&e.parentElement.remove()}))})),window.addEventListener("load",(()=>{document.querySelector("#list-container").classList.remove("d-none")})),window.addEventListener("DOMContentLoaded",(()=>{const e=document.querySelector("#create-task-text");e.addEventListener("keydown",(t=>{"Enter"===t.code&&(w(e),C())})),document.querySelector("#list-container > div > span").addEventListener("click",(e=>{w(e.target.previousElementSibling),C()}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5idW5kbGUuanMiLCJtYXBwaW5ncyI6Im1IQUlJQSxFQUFnQyxJQUFJQyxJQUFJLFlBQ3hDQyxFQUFnQyxJQUFJRCxJQUFJLFlBQ3hDRSxFQUEwQixJQUE0QixLQUN0REMsRUFBcUMsSUFBZ0NKLEdBQ3JFSyxFQUFxQyxJQUFnQ0gsR0FFekVDLEVBQXdCRyxLQUFLLENBQUNDLEVBQU9DLEdBQUksdU5BQXlOSixFQUFxQyw0eUJBQTh5QkMsRUFBcUMsZ1hBQWlYLEdBQUcsQ0FBQyxRQUFVLEVBQUUsUUFBVSxDQUFDLDhCQUE4QixNQUFRLEdBQUcsU0FBVywrb0JBQStvQixlQUFpQixDQUFDLGluRUFBdW5FLFdBQWEsTUFFLzFJLFcscUJDTkFFLEVBQU9FLFFBQVUsU0FBVUMsR0FDekIsSUFBSUMsRUFBTyxHQTZGWCxPQTNGQUEsRUFBS0MsU0FBVyxXQUNkLE9BQU9DLEtBQUtDLEtBQUksU0FBVUMsR0FDeEIsSUFBSUMsRUFBVSxHQUNWQyxPQUErQixJQUFaRixFQUFLLEdBNEI1QixPQTFCSUEsRUFBSyxLQUNQQyxHQUFXLGNBQWNFLE9BQU9ILEVBQUssR0FBSSxRQUd2Q0EsRUFBSyxLQUNQQyxHQUFXLFVBQVVFLE9BQU9ILEVBQUssR0FBSSxPQUduQ0UsSUFDRkQsR0FBVyxTQUFTRSxPQUFPSCxFQUFLLEdBQUdJLE9BQVMsRUFBSSxJQUFJRCxPQUFPSCxFQUFLLElBQU0sR0FBSSxPQUc1RUMsR0FBV04sRUFBdUJLLEdBRTlCRSxJQUNGRCxHQUFXLEtBR1RELEVBQUssS0FDUEMsR0FBVyxLQUdURCxFQUFLLEtBQ1BDLEdBQVcsS0FHTkEsS0FDTkksS0FBSyxLQUlWVCxFQUFLVSxFQUFJLFNBQVdDLEVBQVNDLEVBQU9DLEVBQVFDLEVBQVVDLEdBQzdCLGlCQUFaSixJQUNUQSxFQUFVLENBQUMsQ0FBQyxLQUFNQSxPQUFTSyxLQUc3QixJQUFJQyxFQUF5QixHQUU3QixHQUFJSixFQUNGLElBQUssSUFBSUssRUFBSSxFQUFHQSxFQUFJaEIsS0FBS00sT0FBUVUsSUFBSyxDQUNwQyxJQUFJckIsRUFBS0ssS0FBS2dCLEdBQUcsR0FFUCxNQUFOckIsSUFDRm9CLEVBQXVCcEIsSUFBTSxHQUtuQyxJQUFLLElBQUlzQixFQUFLLEVBQUdBLEVBQUtSLEVBQVFILE9BQVFXLElBQU0sQ0FDMUMsSUFBSWYsRUFBTyxHQUFHRyxPQUFPSSxFQUFRUSxJQUV6Qk4sR0FBVUksRUFBdUJiLEVBQUssV0FJckIsSUFBVlcsU0FDYyxJQUFaWCxFQUFLLEtBR2RBLEVBQUssR0FBSyxTQUFTRyxPQUFPSCxFQUFLLEdBQUdJLE9BQVMsRUFBSSxJQUFJRCxPQUFPSCxFQUFLLElBQU0sR0FBSSxNQUFNRyxPQUFPSCxFQUFLLEdBQUksTUFGL0ZBLEVBQUssR0FBS1csR0FPVkgsSUFDR1IsRUFBSyxJQUdSQSxFQUFLLEdBQUssVUFBVUcsT0FBT0gsRUFBSyxHQUFJLE1BQU1HLE9BQU9ILEVBQUssR0FBSSxLQUMxREEsRUFBSyxHQUFLUSxHQUhWUixFQUFLLEdBQUtRLEdBT1ZFLElBQ0dWLEVBQUssSUFHUkEsRUFBSyxHQUFLLGNBQWNHLE9BQU9ILEVBQUssR0FBSSxPQUFPRyxPQUFPSCxFQUFLLEdBQUksS0FDL0RBLEVBQUssR0FBS1UsR0FIVlYsRUFBSyxHQUFLLEdBQUdHLE9BQU9PLElBT3hCZCxFQUFLTCxLQUFLUyxNQUlQSixJLHFCQ2xHVEosRUFBT0UsUUFBVSxTQUFVc0IsRUFBS0MsR0FLOUIsT0FKS0EsSUFDSEEsRUFBVSxJQUdQRCxHQUlMQSxFQUFNRSxPQUFPRixFQUFJRyxXQUFhSCxFQUFJSSxRQUFVSixHQUV4QyxlQUFlSyxLQUFLTCxLQUN0QkEsRUFBTUEsRUFBSU0sTUFBTSxHQUFJLElBR2xCTCxFQUFRTSxPQUNWUCxHQUFPQyxFQUFRTSxNQUtiLG9CQUFvQkYsS0FBS0wsSUFBUUMsRUFBUU8sV0FDcEMsSUFBS3JCLE9BQU9hLEVBQUlTLFFBQVEsS0FBTSxPQUFPQSxRQUFRLE1BQU8sT0FBUSxLQUc5RFQsR0FuQkVBLEkscUJDTlh4QixFQUFPRSxRQUFVLFNBQVVNLEdBQ3pCLElBQUlDLEVBQVVELEVBQUssR0FDZjBCLEVBQWExQixFQUFLLEdBRXRCLElBQUswQixFQUNILE9BQU96QixFQUdULEdBQW9CLG1CQUFUMEIsS0FBcUIsQ0FDOUIsSUFBSUMsRUFBU0QsS0FBS0UsU0FBU0MsbUJBQW1CQyxLQUFLQyxVQUFVTixNQUN6RE8sRUFBTywrREFBK0Q5QixPQUFPeUIsR0FDN0VNLEVBQWdCLE9BQU8vQixPQUFPOEIsRUFBTSxPQUNwQ0UsRUFBYVQsRUFBV1UsUUFBUXJDLEtBQUksU0FBVXNDLEdBQ2hELE1BQU8saUJBQWlCbEMsT0FBT3VCLEVBQVdZLFlBQWMsSUFBSW5DLE9BQU9rQyxFQUFRLFVBRTdFLE1BQU8sQ0FBQ3BDLEdBQVNFLE9BQU9nQyxHQUFZaEMsT0FBTyxDQUFDK0IsSUFBZ0I3QixLQUFLLE1BR25FLE1BQU8sQ0FBQ0osR0FBU0ksS0FBSyxRLHFCQ2xCeEIsSUFBSWtDLEVBQWMsR0FFbEIsU0FBU0MsRUFBcUJDLEdBRzVCLElBRkEsSUFBSUMsR0FBVSxFQUVMcEMsRUFBSSxFQUFHQSxFQUFJaUMsRUFBWW5DLE9BQVFFLElBQ3RDLEdBQUlpQyxFQUFZakMsR0FBR21DLGFBQWVBLEVBQVksQ0FDNUNDLEVBQVNwQyxFQUNULE1BSUosT0FBT29DLEVBR1QsU0FBU0MsRUFBYS9DLEVBQU1xQixHQUkxQixJQUhBLElBQUkyQixFQUFhLEdBQ2JDLEVBQWMsR0FFVHZDLEVBQUksRUFBR0EsRUFBSVYsRUFBS1EsT0FBUUUsSUFBSyxDQUNwQyxJQUFJTixFQUFPSixFQUFLVSxHQUNaYixFQUFLd0IsRUFBUTZCLEtBQU85QyxFQUFLLEdBQUtpQixFQUFRNkIsS0FBTzlDLEVBQUssR0FDbEQrQyxFQUFRSCxFQUFXbkQsSUFBTyxFQUMxQmdELEVBQWEsR0FBR3RDLE9BQU9WLEVBQUksS0FBS1UsT0FBTzRDLEdBQzNDSCxFQUFXbkQsR0FBTXNELEVBQVEsRUFDekIsSUFBSUMsRUFBb0JSLEVBQXFCQyxHQUN6Q1EsRUFBTSxDQUNSQyxJQUFLbEQsRUFBSyxHQUNWUSxNQUFPUixFQUFLLEdBQ1ptRCxVQUFXbkQsRUFBSyxHQUNoQlUsU0FBVVYsRUFBSyxHQUNmVyxNQUFPWCxFQUFLLElBR2QsSUFBMkIsSUFBdkJnRCxFQUNGVCxFQUFZUyxHQUFtQkksYUFDL0JiLEVBQVlTLEdBQW1CSyxRQUFRSixPQUNsQyxDQUNMLElBQUlJLEVBQVVDLEVBQWdCTCxFQUFLaEMsR0FDbkNBLEVBQVFzQyxRQUFVakQsRUFDbEJpQyxFQUFZaUIsT0FBT2xELEVBQUcsRUFBRyxDQUN2Qm1DLFdBQVlBLEVBQ1pZLFFBQVNBLEVBQ1RELFdBQVksSUFJaEJQLEVBQVl0RCxLQUFLa0QsR0FHbkIsT0FBT0ksRUFHVCxTQUFTUyxFQUFnQkwsRUFBS2hDLEdBQzVCLElBQUl3QyxFQUFNeEMsRUFBUXlDLE9BQU96QyxHQWV6QixPQWRBd0MsRUFBSUUsT0FBT1YsR0FFRyxTQUFpQlcsR0FDN0IsR0FBSUEsRUFBUSxDQUNWLEdBQUlBLEVBQU9WLE1BQVFELEVBQUlDLEtBQU9VLEVBQU9wRCxRQUFVeUMsRUFBSXpDLE9BQVNvRCxFQUFPVCxZQUFjRixFQUFJRSxXQUFhUyxFQUFPbEQsV0FBYXVDLEVBQUl2QyxVQUFZa0QsRUFBT2pELFFBQVVzQyxFQUFJdEMsTUFDekosT0FHRjhDLEVBQUlFLE9BQU9WLEVBQU1XLFFBRWpCSCxFQUFJSSxVQU9WckUsRUFBT0UsUUFBVSxTQUFVRSxFQUFNcUIsR0FHL0IsSUFBSTZDLEVBQWtCbkIsRUFEdEIvQyxFQUFPQSxHQUFRLEdBRGZxQixFQUFVQSxHQUFXLElBR3JCLE9BQU8sU0FBZ0I4QyxHQUNyQkEsRUFBVUEsR0FBVyxHQUVyQixJQUFLLElBQUl6RCxFQUFJLEVBQUdBLEVBQUl3RCxFQUFnQjFELE9BQVFFLElBQUssQ0FDL0MsSUFDSTBELEVBQVF4QixFQURLc0IsRUFBZ0J4RCxJQUVqQ2lDLEVBQVl5QixHQUFPWixhQUtyQixJQUZBLElBQUlhLEVBQXFCdEIsRUFBYW9CLEVBQVM5QyxHQUV0Q2lELEVBQUssRUFBR0EsRUFBS0osRUFBZ0IxRCxPQUFROEQsSUFBTSxDQUNsRCxJQUVJQyxFQUFTM0IsRUFGS3NCLEVBQWdCSSxJQUlLLElBQW5DM0IsRUFBWTRCLEdBQVFmLGFBQ3RCYixFQUFZNEIsR0FBUWQsVUFFcEJkLEVBQVlpQixPQUFPVyxFQUFRLElBSS9CTCxFQUFrQkcsSyxxQkNuR3RCLElBQUlHLEVBQU8sR0FvQ1g1RSxFQUFPRSxRQVZQLFNBQTBCMkUsRUFBUUMsR0FDaEMsSUFBSUMsRUF4Qk4sU0FBbUJBLEdBQ2pCLFFBQTRCLElBQWpCSCxFQUFLRyxHQUF5QixDQUN2QyxJQUFJQyxFQUFjQyxTQUFTQyxjQUFjSCxHQUV6QyxHQUFJSSxPQUFPQyxtQkFBcUJKLGFBQXVCRyxPQUFPQyxrQkFDNUQsSUFHRUosRUFBY0EsRUFBWUssZ0JBQWdCQyxLQUMxQyxNQUFPQyxHQUVQUCxFQUFjLEtBSWxCSixFQUFLRyxHQUFVQyxFQUdqQixPQUFPSixFQUFLRyxHQU1DUyxDQUFVWCxHQUV2QixJQUFLRSxFQUNILE1BQU0sSUFBSVUsTUFBTSwyR0FHbEJWLEVBQU9XLFlBQVlaLEsscUJDekJyQjlFLEVBQU9FLFFBUFAsU0FBNEJ1QixHQUMxQixJQUFJa0UsRUFBVVYsU0FBU1csY0FBYyxTQUdyQyxPQUZBbkUsRUFBUW9FLGNBQWNGLEVBQVNsRSxFQUFRcUUsWUFDdkNyRSxFQUFRb0QsT0FBT2MsRUFBU2xFLEVBQVFBLFNBQ3pCa0UsSSwyQkNJVDNGLEVBQU9FLFFBUlAsU0FBd0M2RixHQUN0QyxJQUFJQyxFQUFtRCxLQUVuREEsR0FDRkQsRUFBYUUsYUFBYSxRQUFTRCxLLHFCQzhEdkNoRyxFQUFPRSxRQVpQLFNBQWdCdUIsR0FDZCxJQUFJc0UsRUFBZXRFLEVBQVF5RSxtQkFBbUJ6RSxHQUM5QyxNQUFPLENBQ0wwQyxPQUFRLFNBQWdCVixJQXpENUIsU0FBZXNDLEVBQWN0RSxFQUFTZ0MsR0FDcEMsSUFBSUMsRUFBTSxHQUVORCxFQUFJdkMsV0FDTndDLEdBQU8sY0FBYy9DLE9BQU84QyxFQUFJdkMsU0FBVSxRQUd4Q3VDLEVBQUl6QyxRQUNOMEMsR0FBTyxVQUFVL0MsT0FBTzhDLEVBQUl6QyxNQUFPLE9BR3JDLElBQUlOLE9BQWlDLElBQWQrQyxFQUFJdEMsTUFFdkJULElBQ0ZnRCxHQUFPLFNBQVMvQyxPQUFPOEMsRUFBSXRDLE1BQU1QLE9BQVMsRUFBSSxJQUFJRCxPQUFPOEMsRUFBSXRDLE9BQVMsR0FBSSxPQUc1RXVDLEdBQU9ELEVBQUlDLElBRVBoRCxJQUNGZ0QsR0FBTyxLQUdMRCxFQUFJekMsUUFDTjBDLEdBQU8sS0FHTEQsRUFBSXZDLFdBQ053QyxHQUFPLEtBR1QsSUFBSUMsRUFBWUYsRUFBSUUsVUFFaEJBLEdBQTZCLG9CQUFUeEIsT0FDdEJ1QixHQUFPLHVEQUF1RC9DLE9BQU93QixLQUFLRSxTQUFTQyxtQkFBbUJDLEtBQUtDLFVBQVVtQixNQUFlLFFBTXRJbEMsRUFBUTBFLGtCQUFrQnpDLEVBQUtxQyxFQUFjdEUsRUFBUUEsU0FrQmpEMkUsQ0FBTUwsRUFBY3RFLEVBQVNnQyxJQUUvQlksT0FBUSxZQWpCWixTQUE0QjBCLEdBRTFCLEdBQWdDLE9BQTVCQSxFQUFhTSxXQUNmLE9BQU8sRUFHVE4sRUFBYU0sV0FBV0MsWUFBWVAsR0FZaENRLENBQW1CUixPLHFCQ2pEekIvRixFQUFPRSxRQVpQLFNBQTJCd0QsRUFBS3FDLEdBQzlCLEdBQUlBLEVBQWFTLFdBQ2ZULEVBQWFTLFdBQVdDLFFBQVUvQyxNQUM3QixDQUNMLEtBQU9xQyxFQUFhVyxZQUNsQlgsRUFBYU8sWUFBWVAsRUFBYVcsWUFHeENYLEVBQWFMLFlBQVlULFNBQVMwQixlQUFlakQsTyxRQ1hyRDFELEVBQU9FLFFBQVUsNGQsMklDQ2IwRyxFQUEyQixHQUcvQixTQUFTQyxFQUFvQkMsR0FFNUIsSUFBSUMsRUFBZUgsRUFBeUJFLEdBQzVDLFFBQXFCMUYsSUFBakIyRixFQUNILE9BQU9BLEVBQWE3RyxRQUdyQixJQUFJRixFQUFTNEcsRUFBeUJFLEdBQVksQ0FDakQ3RyxHQUFJNkcsRUFFSjVHLFFBQVMsSUFPVixPQUhBOEcsRUFBb0JGLEdBQVU5RyxFQUFRQSxFQUFPRSxRQUFTMkcsR0FHL0M3RyxFQUFPRSxRQUlmMkcsRUFBb0JJLEVBQUlELEVDeEJ4QkgsRUFBb0JLLEVBQUtsSCxJQUN4QixJQUFJbUgsRUFBU25ILEdBQVVBLEVBQU8yQixXQUM3QixJQUFPM0IsRUFBaUIsUUFDeEIsSUFBTSxFQUVQLE9BREE2RyxFQUFvQk8sRUFBRUQsRUFBUSxDQUFFRSxFQUFHRixJQUM1QkEsR0NMUk4sRUFBb0JPLEVBQUksQ0FBQ2xILEVBQVNvSCxLQUNqQyxJQUFJLElBQUlDLEtBQU9ELEVBQ1hULEVBQW9CVyxFQUFFRixFQUFZQyxLQUFTVixFQUFvQlcsRUFBRXRILEVBQVNxSCxJQUM1RUUsT0FBT0MsZUFBZXhILEVBQVNxSCxFQUFLLENBQUVJLFlBQVksRUFBTUMsSUFBS04sRUFBV0MsTUNKM0VWLEVBQW9CZ0IsRUFBSSxXQUN2QixHQUEwQixpQkFBZkMsV0FBeUIsT0FBT0EsV0FDM0MsSUFDQyxPQUFPeEgsTUFBUSxJQUFJeUgsU0FBUyxjQUFiLEdBQ2QsTUFBT3hDLEdBQ1IsR0FBc0IsaUJBQVhKLE9BQXFCLE9BQU9BLFFBTGpCLEdDQXhCMEIsRUFBb0JXLEVBQUksQ0FBQy9ELEVBQUt1RSxJQUFVUCxPQUFPUSxVQUFVQyxlQUFlQyxLQUFLMUUsRUFBS3VFLEcsTUNBbEYsSUFBSUksRUFDQXZCLEVBQW9CZ0IsRUFBRVEsZ0JBQWVELEVBQVl2QixFQUFvQmdCLEVBQUVTLFNBQVcsSUFDdEYsSUFBSXJELEVBQVc0QixFQUFvQmdCLEVBQUU1QyxTQUNyQyxJQUFLbUQsR0FBYW5ELElBQ2JBLEVBQVNzRCxnQkFDWkgsRUFBWW5ELEVBQVNzRCxjQUFjQyxNQUMvQkosR0FBVyxDQUNmLElBQUlLLEVBQVV4RCxFQUFTeUQscUJBQXFCLFVBQ3pDRCxFQUFRN0gsU0FBUXdILEVBQVlLLEVBQVFBLEVBQVE3SCxPQUFTLEdBQUc0SCxLQUs3RCxJQUFLSixFQUFXLE1BQU0sSUFBSTNDLE1BQU0seURBQ2hDMkMsRUFBWUEsRUFBVW5HLFFBQVEsT0FBUSxJQUFJQSxRQUFRLFFBQVMsSUFBSUEsUUFBUSxZQUFhLEtBQ3BGNEUsRUFBb0I4QixFQUFJUCxHLEdDZnhCdkIsRUFBb0IrQixFQUFJM0QsU0FBUzRELFNBQVdDLEtBQUtSLFNBQVNTLEssNElDV3REdEgsRUFBVSxHQUVkQSxFQUFRMEUsa0JBQW9CLElBQzVCMUUsRUFBUW9FLGNBQWdCLElBRWxCcEUsRUFBUW9ELE9BQVMsU0FBYyxLQUFNLFFBRTNDcEQsRUFBUXlDLE9BQVMsSUFDakJ6QyxFQUFReUUsbUJBQXFCLElBRWhCLElBQUksSUFBU3pFLEdBS0osS0FBVyxZQUFpQixXLHNCQzFCbEQsSUFBSXVILEVBQWlCLEdBRWQsU0FBU0MsSUFDQWhFLFNBQVNpRSxpQkFBaUIscUJBQ2xDQyxTQUFTQyxJQUNSQSxFQUFJQyxhQUFhLG9CQUNwQkQsRUFBSUUsaUJBQWlCLFNBQVUvRCxJQUU3QkEsRUFBRVIsT0FBT3dFLFVBQVVDLElBQUksVUFDdkJqRSxFQUFFUixPQUFPMEUsbUJBQW1CRixVQUFVbEYsT0FBTyxVQUM3QzJFLEVBQWVqRSxPQUFTUSxFQUFFUixPQUMxQmlFLEVBQWVVLFFBQVVuRSxFQUFFUixPQUFPMEUsbUJBR2xDbEUsRUFBRVIsT0FBTzRFLGNBQWNKLFVBQVVDLElBQUksaUJBc0J0QyxTQUFTSSxFQUFzQnJFLEdBQ3BDLE1BQU1zRSxFQUFVdEUsRUFBRVIsT0FBTytFLE1BSW5CQyxFQUFlOUUsU0FBU2lFLGlCQUFpQixzQkFDL0MsSUFBSTFFLEVBQVEsRUFDWnVGLEVBQWFaLFNBQVEsQ0FBQ2EsRUFBSWxKLEtBQ3BCa0osSUFBT3pFLEVBQUVSLE9BQU80RSxnQkFDbEJuRixFQUFRMUQsTUFLWixNQUFNbUosRUFBUTFILEtBQUsySCxNQUFNQyxhQUFhQyxRQUFRLFdBQWEsR0FDM0QzQyxPQUFPNEMsS0FBS0osR0FBT2QsU0FBUSxDQUFDNUIsRUFBS3pHLEtBQzNCQSxJQUFNMEQsSUFDUnlGLEVBQU0xQyxHQUFLK0MsWUFBY1QsTUFHN0JNLGFBQWFJLFFBQVEsUUFBU2hJLEtBQUtDLFVBQVV5SCxJQUc3QzFFLEVBQUVSLE9BQU95Rix1QkFBdUJDLFVBQVlaLEVBR3ZDLFNBQVNhLEVBQXdCbkYsR0FDdkIsVUFBWEEsRUFBRW9GLE9BQ0pwRixFQUFFUixPQUFPNkYsT0FDVHJGLEVBQUVSLE9BQU80RSxjQUFjSixVQUFVbEYsT0FBTyxZQ2pFckMsU0FBU3dHLEVBQWdCQyxHQUM5QkEsRUFBU25CLGNBQWNKLFVBQVV3QixPQUFPLFdBRzFDLFNBQVNDLEVBQW1CQyxFQUFnQkgsR0FFMUMsTUFBTUksRUFBYWpHLFNBQVNpRSxpQkFBaUIsNkNBQzdDLElBQUkxRSxFQUFRLEVBQ1owRyxFQUFXL0IsU0FBUSxDQUFDYSxFQUFJbEosS0FDbEJrSixJQUFPYyxJQUNUdEcsRUFBUTFELE1BSVosTUFBTW1KLEVBQVExSCxLQUFLMkgsTUFBTUMsYUFBYUMsUUFBUSxXQUFhLEdBQzNESCxFQUFNZCxTQUFTZ0MsSUFFVEEsRUFBSzNHLFFBQVVBLElBQ2pCMkcsRUFBS0MsVUFBWUgsTUFLckJkLGFBQWFJLFFBQVEsUUFBU2hJLEtBQUtDLFVBQVV5SCxJQUd4QyxTQUFTb0IsRUFBZ0I5RixHQUM5QixNQUFNdUYsRUFBV3ZGLEVBQUVSLE9BQ25COEYsRUFBZ0JDLEdBQ1pBLEVBQVNRLFFBQ1hOLEdBQW1CLEVBQU1GLEdBRXpCRSxHQUFtQixFQUFPRixHQzNCZixTQUFTUyxFQUFhSixHQUVuQyxNQUFNSyxFQUFLdkcsU0FBU1csY0FBYyxNQUNsQzRGLEVBQUdqQyxVQUFVQyxJQUFJLGtCQUFtQixTQUFVLHFCQUFzQixPQUFRLFFBRTVFLE1BQU1iLEVBQUkxRCxTQUFTVyxjQUFjLEtBQ2pDK0MsRUFBRThDLFVBQVlOLEVBQUtiLFlBQ25CM0IsRUFBRVksVUFBVUMsSUFBSSxPQUFRLE9BQVEsT0FBUSxTQUV4QyxNQUFNa0MsRUFBV3pHLFNBQVNXLGNBQWMsU0FDeEM4RixFQUFTQyxLQUFPLFdBQ2hCRCxFQUFTbkMsVUFBVUMsSUFBSSxZQUFhLFNBQVUsU0FDOUNrQyxFQUFTNUIsTUFBUXFCLEVBQUtiLFlBQ3RCb0IsRUFBU3BDLGlCQUFpQixTQUFVTSxHQUNwQzhCLEVBQVNwQyxpQkFBaUIsVUFBV29CLEdBRXJDLE1BQU1JLEVBQVc3RixTQUFTVyxjQUFjLFNBQ3hDa0YsRUFBU2EsS0FBTyxXQUNoQmIsRUFBU1EsUUFBVUgsRUFBS0MsVUFDeEJOLEVBQVN2QixVQUFVQyxJQUFJLG9CQUV2QixNQUFNb0MsRUFBVTNHLFNBQVNXLGNBQWMsT0FDdkNnRyxFQUFRSCxVQUFZSSxJQUNwQkQsRUFBUXJDLFVBQVVDLElBQUksV0FFdEJnQyxFQUFHOUYsWUFBWW9GLEdBQ2ZVLEVBQUc5RixZQUFZaUQsR0FDZjZDLEVBQUc5RixZQUFZZ0csR0FDZkYsRUFBRzlGLFlBQVlrRyxHQUVKM0csU0FBU0MsY0FBYyxzQkFFL0JRLFlBQVk4RixHQUdmVixFQUFTeEIsaUJBQWlCLFNBQVUrQixHQUNoQ1AsRUFBU1EsU0FBV1QsRUFBZ0JDLEdDdkMzQixTQUFTZ0IsRUFBZW5HLEdBRXJDLE1BQU1zRSxFQUFRMUgsS0FBSzJILE1BQU1DLGFBQWFDLFFBQVEsV0FBYSxHQUNyRDJCLEVBQVUsQ0FDZHpCLFlBQWEzRSxFQUFRbUUsTUFDckJzQixXQUFXLEVBQ1g1RyxNQUFPeUYsRUFBTXJKLFFBRWZxSixFQUFNbEssS0FBS2dNLEdBQ1g1QixhQUFhSSxRQUFRLFFBQVNoSSxLQUFLQyxVQUFVeUgsSUFHN0NzQixFQUFhUSxHQUNicEcsRUFBUW1FLE1BQVEsR0hNbEI3RSxTQUFTcUUsaUJBQWlCLFNBQVUvRCxJQUk5QkEsRUFBRVIsU0FBV2lFLEVBQWVqRSxRQUFVUSxFQUFFUixTQUFXaUUsRUFBZVUsU0FDakVqQyxPQUFPNEMsS0FBS3JCLEdBQWdCcEksU0FFL0JvSSxFQUFlVSxRQUFRQyxjQUFjSixVQUFVbEYsT0FBTyxXQUV0RDJFLEVBQWVqRSxPQUFPd0UsVUFBVWxGLE9BQU8sVUFDdkMyRSxFQUFlVSxRQUFRSCxVQUFVQyxJQUFJLFVBQ3JDUixFQUFpQixPQUVsQixJSTFCV3pHLEtBQUsySCxNQUFNQyxhQUFhQyxRQUFRLFdBQWEsSUFDckRqQixTQUFTZ0MsR0FBU0ksRUFBYUosS0FFckNsQyxJQUUwQmhFLFNBQVNDLGNBQWMsb0JBQy9Cb0UsaUJBQWlCLFNDZHBCLFdBRWIsSUFBSVcsRUFBUTFILEtBQUsySCxNQUFNQyxhQUFhQyxRQUFRLFdBQWEsR0FDekRILEVBQVFBLEVBQU0rQixRQUFRYixJQUE0QixJQUFuQkEsRUFBS0MsWUFFcENuQixFQUFNZCxTQUFRLENBQUNnQyxFQUFNM0csS0FBWTJHLEVBQUszRyxNQUFRQSxLQUM5QzJGLGFBQWFJLFFBQVEsUUFBU2hJLEtBQUtDLFVBQVV5SCxJQUcxQmhGLFNBQVNpRSxpQkFBaUIsNkNBQ2xDQyxTQUFTOEMsSUFDZEEsRUFBSVgsU0FBV1csRUFBSXRDLGNBQWN0RixlRE16Q2MsT0FBT21FLGlCQUFpQixRQUFRLEtBQ2pCckUsU0FBU0MsY0FBYyxtQkFDL0JxRSxVQUFVbEYsT0FBTyxhQUl4QmMsT0FBT21FLGlCQUFpQixvQkFBb0IsS0FFMUMsTUFBTTNELEVBQVVWLFNBQVNDLGNBQWMscUJBQ3ZDUyxFQUFRMkQsaUJBQWlCLFdBQVkvRCxJQUNwQixVQUFYQSxFQUFFb0YsT0FDSm1CLEVBQWVuRyxHQUVmc0QsUUFLZWhFLFNBQVNDLGNBQWMsZ0NBQy9Cb0UsaUJBQWlCLFNBQVUvRCxJQUNwQ3VHLEVBQWV2RyxFQUFFUixPQUFPeUYsd0JBRXhCdkIsVyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9zdHlsZS5zY3NzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovLy8uL3NyYy9pY29ucy92ZXJ0aWNhbC5zdmciLCJ3ZWJwYWNrOi8vL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovLy93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly8vd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovLy93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovLy93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovLy93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly8vd2VicGFjay9ydW50aW1lL2pzb25wIGNodW5rIGxvYWRpbmciLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0eWxlLnNjc3M/ZmVhNCIsIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9lZGl0VGFzay5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy91cGRhdGVDaGVja0JveC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9wb3B1bGF0ZUxpc3QuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL21vZHVsZXMvYWRkVGFzay5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL21vZHVsZXMvcmVtb3ZlVGFzay5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18gPSBuZXcgVVJMKFwiLi9pY29ucy9jaGVja2VkLnN2Z1wiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xX19fID0gbmV3IFVSTChcIi4vaWNvbnMvZW50ZXIucG5nXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzFfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcImRpdntjb2xvcjpibHVlfWlucHV0W3R5cGU9Y2hlY2tib3hde2JvcmRlci1yYWRpdXM6MnB4ICFpbXBvcnRhbnQ7Y3Vyc29yOnBvaW50ZXI7d2lkdGg6MS4zZW07aGVpZ2h0OjEuMmVtfWlucHV0W3R5cGU9Y2hlY2tib3hdOmNoZWNrZWR7YmFja2dyb3VuZC1jb2xvcjp1bnNldCAhaW1wb3J0YW50O2JvcmRlcjpub25lICFpbXBvcnRhbnQ7YmFja2dyb3VuZC1pbWFnZTp1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fICsgXCIpICFpbXBvcnRhbnR9aW5wdXRbdHlwZT1jaGVja2JveF06Zm9jdXN7Ym94LXNoYWRvdzpub25lO2JvcmRlci1jb2xvcjp1bnNldH0uY2hlY2tlZHtjb2xvcjojYWZhZmFmICFpbXBvcnRhbnR9LmNoZWNrZWQgcHt0ZXh0LWRlY29yYXRpb246bGluZS10aHJvdWdoICFpbXBvcnRhbnR9c3Zne3dpZHRoOjIwcHg7aGVpZ2h0OjIwcHg7ZmlsbDojY2JjYmNifXVse2JvcmRlci1yYWRpdXM6MCAhaW1wb3J0YW50fXVsPmxpe2JvcmRlcjpub25lICFpbXBvcnRhbnQ7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgcmdiYSgwLDAsMCwuMTI1KSAhaW1wb3J0YW50fSNsaXN0LWNvbnRhaW5lcntib3gtc2hhZG93OjAgMnB4IDhweCByZ2JhKDAsMCwwLC4xNSl9I2xpc3QtY29udGFpbmVyPmRpdiBpbnB1dHtjb2xvcjojOTQ5NDk0O3dpZHRoOjEwMCU7cGFkZGluZzoxcmVtIDFyZW07Ym9yZGVyOm5vbmU7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgcmdiYSgwLDAsMCwuMTI1KX0jbGlzdC1jb250YWluZXI+ZGl2IGlucHV0OjpwbGFjZWhvbGRlcntmb250LXN0eWxlOml0YWxpY30jbGlzdC1jb250YWluZXI+ZGl2IGlucHV0OmZvY3VzLXZpc2libGV7b3V0bGluZTpub25lfSNsaXN0LWNvbnRhaW5lcj5kaXYgc3Bhbnstd2Via2l0LWFwcGVhcmFuY2U6bm9uZTstbW96LWFwcGVhcmFuY2U6bm9uZTthcHBlYXJhbmNlOm5vbmU7Ym9yZGVyOm5vbmU7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtwb3NpdGlvbjphYnNvbHV0ZTtyaWdodDowO3RvcDowO3otaW5kZXg6MDt3aWR0aDo0MHB4O2hlaWdodDoxMDAlO2JhY2tncm91bmQtaW1hZ2U6dXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMV9fXyArIFwiKTtiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXQ7YmFja2dyb3VuZC1wb3NpdGlvbjpjZW50ZXI7Y3Vyc29yOnBvaW50ZXJ9I3JlbW92ZS1zZWxlY3RlZHtiYWNrZ3JvdW5kLWNvbG9yOiNmNmY2ZjY7Y29sb3I6Izk0OTQ5NDtjdXJzb3I6cG9pbnRlcn0jcmVtb3ZlLXNlbGVjdGVkOmhvdmVye2JhY2tncm91bmQtY29sb3I6I2VlZX0udGV4dC1lZGl0e2JvcmRlcjpub25lO3BhZGRpbmc6MXJlbSAxcmVtO21hcmdpbjowO3RleHQtZGVjb3JhdGlvbjpub25lO2JhY2tncm91bmQtY29sb3I6dW5zZXR9LnRleHQtZWRpdDpmb2N1cy12aXNpYmxle291dGxpbmU6bm9uZX0uZWRpdGluZ3tiYWNrZ3JvdW5kLWNvbG9yOiNmZGZkYjcgIWltcG9ydGFudH1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGUuc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQSxJQUNFLFVBQUEsQ0FHRixxQkFDRSw0QkFBQSxDQUNBLGNBQUEsQ0FDQSxXQUFBLENBQ0EsWUFBQSxDQUVBLDZCQUNFLGlDQUFBLENBQ0Esc0JBQUEsQ0FDQSxtRUFBQSxDQUdGLDJCQUNFLGVBQUEsQ0FDQSxrQkFBQSxDQUlKLFNBRUUsd0JBQUEsQ0FFQSxXQUNFLHVDQUFBLENBSUosSUFDRSxVQUFBLENBQ0EsV0FBQSxDQUNBLFlBQUEsQ0FHRixHQUNFLDBCQUFBLENBRUEsTUFDRSxzQkFBQSxDQUNBLG1EQUFBLENBSUosZ0JBQ0Usb0NBQUEsQ0FHRSwwQkFDRSxhQUFBLENBQ0EsVUFBQSxDQUNBLGlCQUFBLENBQ0EsV0FBQSxDQUNBLHdDQUFBLENBRUEsdUNBQ0UsaUJBQUEsQ0FHRix3Q0FDRSxZQUFBLENBSUoseUJBQ0UsdUJBQUEsQ0FDQSxvQkFBQSxDQUNBLGVBQUEsQ0FDQSxXQUFBLENBQ0EsNEJBQUEsQ0FDQSxpQkFBQSxDQUNBLE9BQUEsQ0FDQSxLQUFBLENBQ0EsU0FBQSxDQUNBLFVBQUEsQ0FDQSxXQUFBLENBQ0Esd0RBQUEsQ0FDQSwyQkFBQSxDQUNBLDBCQUFBLENBQ0EsY0FBQSxDQUtOLGlCQUNFLHdCQUFBLENBQ0EsYUFBQSxDQUNBLGNBQUEsQ0FFQSx1QkFDRSxxQkFBQSxDQUlKLFdBQ0UsV0FBQSxDQUNBLGlCQUFBLENBQ0EsUUFBQSxDQUNBLG9CQUFBLENBQ0Esc0JBQUEsQ0FFQSx5QkFDRSxZQUFBLENBSUosU0FDRSxtQ0FBQVwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJkaXYge1xcclxcbiAgY29sb3I6IGJsdWU7XFxyXFxufVxcclxcblxcclxcbmlucHV0W3R5cGU9XFxcImNoZWNrYm94XFxcIl0ge1xcclxcbiAgYm9yZGVyLXJhZGl1czogMnB4ICFpbXBvcnRhbnQ7XFxyXFxuICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICB3aWR0aDogMS4zZW07XFxyXFxuICBoZWlnaHQ6IDEuMmVtO1xcclxcblxcclxcbiAgJjpjaGVja2VkIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdW5zZXQgIWltcG9ydGFudDtcXHJcXG4gICAgYm9yZGVyOiBub25lICFpbXBvcnRhbnQ7XFxyXFxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcXFwiLi9pY29ucy9jaGVja2VkLnN2Z1xcXCIpICFpbXBvcnRhbnQ7XFxyXFxuICB9XFxyXFxuXFxyXFxuICAmOmZvY3VzIHtcXHJcXG4gICAgYm94LXNoYWRvdzogbm9uZTtcXHJcXG4gICAgYm9yZGVyLWNvbG9yOiB1bnNldDtcXHJcXG4gIH1cXHJcXG59XFxyXFxuXFxyXFxuLmNoZWNrZWQge1xcclxcbiAgLy8gYmFja2dyb3VuZC1jb2xvcjogIzBjODhlNCAhaW1wb3J0YW50O1xcclxcbiAgY29sb3I6IHJnYigxNzUgMTc1IDE3NSkgIWltcG9ydGFudDtcXHJcXG5cXHJcXG4gIHAge1xcclxcbiAgICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaCAhaW1wb3J0YW50O1xcclxcbiAgfVxcclxcbn1cXHJcXG5cXHJcXG5zdmcge1xcclxcbiAgd2lkdGg6IDIwcHg7XFxyXFxuICBoZWlnaHQ6IDIwcHg7XFxyXFxuICBmaWxsOiAjY2JjYmNiO1xcclxcbn1cXHJcXG5cXHJcXG51bCB7XFxyXFxuICBib3JkZXItcmFkaXVzOiAwICFpbXBvcnRhbnQ7XFxyXFxuXFxyXFxuICA+IGxpIHtcXHJcXG4gICAgYm9yZGVyOiBub25lICFpbXBvcnRhbnQ7XFxyXFxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMTI1KSAhaW1wb3J0YW50O1xcclxcbiAgfVxcclxcbn1cXHJcXG5cXHJcXG4jbGlzdC1jb250YWluZXIge1xcclxcbiAgYm94LXNoYWRvdzogMCAycHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xNSk7XFxyXFxuXFxyXFxuICA+IGRpdiB7XFxyXFxuICAgIGlucHV0IHtcXHJcXG4gICAgICBjb2xvcjogIzk0OTQ5NDtcXHJcXG4gICAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgICBwYWRkaW5nOiAxcmVtIDFyZW07XFxyXFxuICAgICAgYm9yZGVyOiBub25lO1xcclxcbiAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMTI1KTtcXHJcXG5cXHJcXG4gICAgICAmOjpwbGFjZWhvbGRlciB7XFxyXFxuICAgICAgICBmb250LXN0eWxlOiBpdGFsaWM7XFxyXFxuICAgICAgfVxcclxcblxcclxcbiAgICAgICY6Zm9jdXMtdmlzaWJsZSB7XFxyXFxuICAgICAgICBvdXRsaW5lOiBub25lO1xcclxcbiAgICAgIH1cXHJcXG4gICAgfVxcclxcblxcclxcbiAgICBzcGFuIHtcXHJcXG4gICAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XFxyXFxuICAgICAgLW1vei1hcHBlYXJhbmNlOiBub25lO1xcclxcbiAgICAgIGFwcGVhcmFuY2U6IG5vbmU7XFxyXFxuICAgICAgYm9yZGVyOiBub25lO1xcclxcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcclxcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gICAgICByaWdodDogMDtcXHJcXG4gICAgICB0b3A6IDA7XFxyXFxuICAgICAgei1pbmRleDogMDtcXHJcXG4gICAgICB3aWR0aDogNDBweDtcXHJcXG4gICAgICBoZWlnaHQ6IDEwMCU7XFxyXFxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFxcXCIuL2ljb25zL2VudGVyLnBuZ1xcXCIpO1xcclxcbiAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XFxyXFxuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xcclxcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gICAgfVxcclxcbiAgfVxcclxcbn1cXHJcXG5cXHJcXG4jcmVtb3ZlLXNlbGVjdGVkIHtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmNmY2ZjY7XFxyXFxuICBjb2xvcjogIzk0OTQ5NDtcXHJcXG4gIGN1cnNvcjogcG9pbnRlcjtcXHJcXG5cXHJcXG4gICY6aG92ZXIge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlO1xcclxcbiAgfVxcclxcbn1cXHJcXG5cXHJcXG4udGV4dC1lZGl0IHtcXHJcXG4gIGJvcmRlcjogbm9uZTtcXHJcXG4gIHBhZGRpbmc6IDFyZW0gMXJlbTtcXHJcXG4gIG1hcmdpbjogMDtcXHJcXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6IHVuc2V0O1xcclxcblxcclxcbiAgJjpmb2N1cy12aXNpYmxlIHtcXHJcXG4gICAgb3V0bGluZTogbm9uZTtcXHJcXG4gIH1cXHJcXG59XFxyXFxuXFxyXFxuLmVkaXRpbmcge1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZkZmRiNyAhaW1wb3J0YW50O1xcclxcbn1cXHJcXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1cmwsIG9wdGlvbnMpIHtcbiAgaWYgKCFvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG5cbiAgaWYgKCF1cmwpIHtcbiAgICByZXR1cm4gdXJsO1xuICB9XG5cbiAgdXJsID0gU3RyaW5nKHVybC5fX2VzTW9kdWxlID8gdXJsLmRlZmF1bHQgOiB1cmwpOyAvLyBJZiB1cmwgaXMgYWxyZWFkeSB3cmFwcGVkIGluIHF1b3RlcywgcmVtb3ZlIHRoZW1cblxuICBpZiAoL15bJ1wiXS4qWydcIl0kLy50ZXN0KHVybCkpIHtcbiAgICB1cmwgPSB1cmwuc2xpY2UoMSwgLTEpO1xuICB9XG5cbiAgaWYgKG9wdGlvbnMuaGFzaCkge1xuICAgIHVybCArPSBvcHRpb25zLmhhc2g7XG4gIH0gLy8gU2hvdWxkIHVybCBiZSB3cmFwcGVkP1xuICAvLyBTZWUgaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy12YWx1ZXMtMy8jdXJsc1xuXG5cbiAgaWYgKC9bXCInKCkgXFx0XFxuXXwoJTIwKS8udGVzdCh1cmwpIHx8IG9wdGlvbnMubmVlZFF1b3Rlcykge1xuICAgIHJldHVybiBcIlxcXCJcIi5jb25jYXQodXJsLnJlcGxhY2UoL1wiL2csICdcXFxcXCInKS5yZXBsYWNlKC9cXG4vZywgXCJcXFxcblwiKSwgXCJcXFwiXCIpO1xuICB9XG5cbiAgcmV0dXJuIHVybDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcblxuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gdXBkYXRlcjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cblxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcblxuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cblxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuXG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cblxuICBjc3MgKz0gb2JqLmNzcztcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwibW9kdWxlLmV4cG9ydHMgPSBcIjxzdmcgeG1sbnM6eGxpbms9XFxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgY2xhc3M9XFxcImljb24tbW9yZS12ZXJ0XFxcIj48ZGVmcz48c3ltYm9sIGlkPVxcXCJpY29uLW1vcmUtdmVydFxcXCIgdmlld0JveD1cXFwiMCAwIDUxMiA1MTJcXFwiPjxwYXRoIGQ9XFxcIm0yNTYgMTI4YzM1IDAgNjQtMjkgNjQtNjQgMC0zNS0yOS02NC02NC02NC0zNSAwLTY0IDI5LTY0IDY0IDAgMzUgMjkgNjQgNjQgNjR6IG0wIDY0Yy0zNSAwLTY0IDI5LTY0IDY0IDAgMzUgMjkgNjQgNjQgNjQgMzUgMCA2NC0yOSA2NC02NCAwLTM1LTI5LTY0LTY0LTY0eiBtMCAxOTJjLTM1IDAtNjQgMjktNjQgNjQgMCAzNSAyOSA2NCA2NCA2NCAzNSAwIDY0LTI5IDY0LTY0IDAtMzUtMjktNjQtNjQtNjR6XFxcIj48L3BhdGg+PC9zeW1ib2w+PC9kZWZzPjx1c2UgeGxpbms6aHJlZj1cXFwiI2ljb24tbW9yZS12ZXJ0XFxcIj48L3VzZT48L3N2Zz5cIiIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4vLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuX193ZWJwYWNrX3JlcXVpcmVfXy5tID0gX193ZWJwYWNrX21vZHVsZXNfXztcblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmNcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSBzY3JpcHRVcmwgPSBzY3JpcHRzW3NjcmlwdHMubGVuZ3RoIC0gMV0uc3JjXG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIl9fd2VicGFja19yZXF1aXJlX18uYiA9IGRvY3VtZW50LmJhc2VVUkkgfHwgc2VsZi5sb2NhdGlvbi5ocmVmO1xuXG4vLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuLy8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4vLyBbcmVzb2x2ZSwgcmVqZWN0LCBQcm9taXNlXSA9IGNodW5rIGxvYWRpbmcsIDAgPSBjaHVuayBsb2FkZWRcbnZhciBpbnN0YWxsZWRDaHVua3MgPSB7XG5cdDE3OTogMFxufTtcblxuLy8gbm8gY2h1bmsgb24gZGVtYW5kIGxvYWRpbmdcblxuLy8gbm8gcHJlZmV0Y2hpbmdcblxuLy8gbm8gcHJlbG9hZGVkXG5cbi8vIG5vIEhNUlxuXG4vLyBubyBITVIgbWFuaWZlc3RcblxuLy8gbm8gb24gY2h1bmtzIGxvYWRlZFxuXG4vLyBubyBqc29ucCBmdW5jdGlvbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzRdLnVzZVsyXSEuLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5zY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzRdLnVzZVsyXSEuLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5zY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwibGV0IGVkaXRlZEVsZW1lbnRzID0ge307XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZWRpdFRhc2tMaXN0ZW5lcnNGb3JTdHlsZSgpIHtcclxuICBjb25zdCBwVGFncyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJyNsaXN0LWNvbnRhaW5lciBwJyk7XHJcbiAgcFRhZ3MuZm9yRWFjaCgodGFnKSA9PiB7XHJcbiAgICBpZiAoIXRhZy5oYXNBdHRyaWJ1dGUoJ2xpc3RlbmVyT25DbGljaycpKSB7IC8vIGNoZWNrIGlmIHRoZXJlIGllIGFscmVhZHkgbGlzdGVuZXJcclxuICAgICAgdGFnLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZyhlLnRhcmdldCk7XHJcbiAgICAgICAgZS50YXJnZXQuY2xhc3NMaXN0LmFkZCgnZC1ub25lJyk7XHJcbiAgICAgICAgZS50YXJnZXQubmV4dEVsZW1lbnRTaWJsaW5nLmNsYXNzTGlzdC5yZW1vdmUoJ2Qtbm9uZScpO1xyXG4gICAgICAgIGVkaXRlZEVsZW1lbnRzLnRhcmdldCA9IGUudGFyZ2V0O1xyXG4gICAgICAgIGVkaXRlZEVsZW1lbnRzLnNpYmxpbmcgPSBlLnRhcmdldC5uZXh0RWxlbWVudFNpYmxpbmc7XHJcblxyXG4gICAgICAgIC8vIGFkZCBsaXN0IGVsZW1lbnQgZWRpdCBzdHlsaW5nXHJcbiAgICAgICAgZS50YXJnZXQucGFyZW50RWxlbWVudC5jbGFzc0xpc3QuYWRkKCdlZGl0aW5nJyk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH0pO1xyXG59XHJcblxyXG4vLyBlZGl0IGV2ZW50IG91dGVyIGNsaWNrIGhhbmRsZXJcclxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xyXG4gIC8vIGNvbnNvbGUubG9nKGUudGFyZ2V0ID09PSBlZGl0ZWRFbGVtZW50cy5zaWJsaW5nKTtcclxuICAvLyBjb25zb2xlLmxvZyhlLnRhcmdldCA9PT0gZWRpdGVkRWxlbWVudHMudGFyZ2V0KTtcclxuICAvLyBjb25zb2xlLmxvZyhlZGl0ZWRFbGVtZW50cylcclxuICBpZiAoZS50YXJnZXQgIT09IGVkaXRlZEVsZW1lbnRzLnRhcmdldCAmJiBlLnRhcmdldCAhPT0gZWRpdGVkRWxlbWVudHMuc2libGluZ1xyXG4gICAgJiYgT2JqZWN0LmtleXMoZWRpdGVkRWxlbWVudHMpLmxlbmd0aCkge1xyXG4gICAgLy8gcmVtb3ZlIGxpc3QgaXRlbSBzdHlsaW5nXHJcbiAgICBlZGl0ZWRFbGVtZW50cy5zaWJsaW5nLnBhcmVudEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnZWRpdGluZycpO1xyXG5cclxuICAgIGVkaXRlZEVsZW1lbnRzLnRhcmdldC5jbGFzc0xpc3QucmVtb3ZlKCdkLW5vbmUnKTtcclxuICAgIGVkaXRlZEVsZW1lbnRzLnNpYmxpbmcuY2xhc3NMaXN0LmFkZCgnZC1ub25lJyk7XHJcbiAgICBlZGl0ZWRFbGVtZW50cyA9IHt9O1xyXG4gIH1cclxufSwgdHJ1ZSk7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gdGV4dEFyZWFDaGFuZ2VIYW5kbGVyKGUpIHtcclxuICBjb25zdCBuZXdUZXh0ID0gZS50YXJnZXQudmFsdWU7XHJcbiAgLy8gY29uc29sZS5sb2cobmV3VGV4dCk7XHJcblxyXG4gIC8vIGZpbmQgaW5kZXggb2YgdGV4dGFyZWFcclxuICBjb25zdCBsaXN0RWxlbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcjbGlzdC1jb250YWluZXIgbGknKTtcclxuICBsZXQgaW5kZXggPSAwO1xyXG4gIGxpc3RFbGVtZW50cy5mb3JFYWNoKChlbCwgaSkgPT4ge1xyXG4gICAgaWYgKGVsID09PSBlLnRhcmdldC5wYXJlbnRFbGVtZW50KSB7XHJcbiAgICAgIGluZGV4ID0gaTtcclxuICAgIH1cclxuICB9KTtcclxuXHJcbiAgLy8gdXBkYXRlIGxvY2FsIHN0b3JhZ2VcclxuICBjb25zdCB0YXNrcyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rhc2tzJykpIHx8IFtdO1xyXG4gIE9iamVjdC5rZXlzKHRhc2tzKS5mb3JFYWNoKChrZXksIGkpID0+IHtcclxuICAgIGlmIChpID09PSBpbmRleCkge1xyXG4gICAgICB0YXNrc1trZXldLmRlc2NyaXB0aW9uID0gbmV3VGV4dDtcclxuICAgIH1cclxuICB9KTtcclxuICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndGFza3MnLCBKU09OLnN0cmluZ2lmeSh0YXNrcykpO1xyXG5cclxuICAvLyB1cGRhdGUgcCBlbGVtZW50XHJcbiAgZS50YXJnZXQucHJldmlvdXNFbGVtZW50U2libGluZy5pbm5lclRleHQgPSBuZXdUZXh0O1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gdGV4dEFyZWFFbnRlcktleUhhbmRsZXIoZSkge1xyXG4gIGlmIChlLmNvZGUgPT09ICdFbnRlcicpIHtcclxuICAgIGUudGFyZ2V0LmJsdXIoKTsgLy8gcmVtb3ZlIGZvY3VzXHJcbiAgICBlLnRhcmdldC5wYXJlbnRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ2VkaXRpbmcnKTsgLy8gcmVtb3ZlIGVkaXQgc3R5bGluZ1xyXG4gIH1cclxufSIsImV4cG9ydCBmdW5jdGlvbiBsaUNoZWNrZWRUb2dnbGUoY2hlY2tCb3gpIHtcclxuICBjaGVja0JveC5wYXJlbnRFbGVtZW50LmNsYXNzTGlzdC50b2dnbGUoJ2NoZWNrZWQnKTtcclxufVxyXG5cclxuZnVuY3Rpb24gdXBkYXRlTG9jYWxTdG9yYWdlKGNvbXBsZXRlU3RhdHVzLCBjaGVja0JveCkge1xyXG4gIC8vIGZpbmQgdGFzayBsb2NhdGlvblxyXG4gIGNvbnN0IGNoZWNrQm94ZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcjbGlzdC1jb250YWluZXIgbGkgPiBpbnB1dFt0eXBlPWNoZWNrYm94XScpO1xyXG4gIGxldCBpbmRleCA9IDA7XHJcbiAgY2hlY2tCb3hlcy5mb3JFYWNoKChlbCwgaSkgPT4ge1xyXG4gICAgaWYgKGVsID09PSBjaGVja0JveCkge1xyXG4gICAgICBpbmRleCA9IGk7XHJcbiAgICB9XHJcbiAgfSk7XHJcbiAgLy8gZmluZCB0YXNrIHdpdGhpbiBsb2NhbHN0b3JhZ2VcclxuICBjb25zdCB0YXNrcyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rhc2tzJykpIHx8IFtdO1xyXG4gIHRhc2tzLmZvckVhY2goKHRhc2spID0+IHtcclxuICAgIC8vIGNvbnNvbGUubG9nKGluZGV4KTtcclxuICAgIGlmICh0YXNrLmluZGV4ID09PSBpbmRleCkge1xyXG4gICAgICB0YXNrLmNvbXBsZXRlZCA9IGNvbXBsZXRlU3RhdHVzO1xyXG4gICAgICAvLyBjb25zb2xlLmxvZyh0YXNrKTtcclxuICAgIH1cclxuICB9KTtcclxuICAvLyB1cGRhdGUgbG9jYWxzdG9yYWdlXHJcbiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3Rhc2tzJywgSlNPTi5zdHJpbmdpZnkodGFza3MpKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNoZWNrQm94SGFuZGxlcihlKSB7XHJcbiAgY29uc3QgY2hlY2tCb3ggPSBlLnRhcmdldDtcclxuICBsaUNoZWNrZWRUb2dnbGUoY2hlY2tCb3gpOyAvLyB1cGRhdGUgc3R5bGVcclxuICBpZiAoY2hlY2tCb3guY2hlY2tlZCkge1xyXG4gICAgdXBkYXRlTG9jYWxTdG9yYWdlKHRydWUsIGNoZWNrQm94KTtcclxuICB9IGVsc2Uge1xyXG4gICAgdXBkYXRlTG9jYWxTdG9yYWdlKGZhbHNlLCBjaGVja0JveCk7XHJcbiAgfVxyXG59IiwiaW1wb3J0IHZlcnRCdG5TdmcgZnJvbSAnLi4vaWNvbnMvdmVydGljYWwuc3ZnJztcclxuaW1wb3J0IHsgdGV4dEFyZWFDaGFuZ2VIYW5kbGVyLCB0ZXh0QXJlYUVudGVyS2V5SGFuZGxlciB9IGZyb20gJy4vZWRpdFRhc2snO1xyXG5pbXBvcnQgeyBjaGVja0JveEhhbmRsZXIsIGxpQ2hlY2tlZFRvZ2dsZSB9IGZyb20gJy4vdXBkYXRlQ2hlY2tCb3gnO1xyXG5cclxuLy8gcG9wdWxhdGUgdWwgZWxlbWVudCBvbiBwYWdlIGxvYWQgb3IgbmV3IHRhc2sgYWRkZWRcclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcG9wdWxhdGVMaXN0KHRhc2spIHtcclxuICAvLyBjb25zb2xlLmxvZyh2ZXJ0QnRuU3ZnKVxyXG4gIGNvbnN0IGxpID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKTtcclxuICBsaS5jbGFzc0xpc3QuYWRkKCdsaXN0LWdyb3VwLWl0ZW0nLCAnZC1mbGV4JywgJ2FsaWduLWl0ZW1zLWNlbnRlcicsICdweS0wJywgJ3BlLTInKTtcclxuXHJcbiAgY29uc3QgcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcclxuICBwLmlubmVySFRNTCA9IHRhc2suZGVzY3JpcHRpb247XHJcbiAgcC5jbGFzc0xpc3QuYWRkKCdweC0zJywgJ3B5LTMnLCAnbWItMCcsICd3LTEwMCcpO1xyXG5cclxuICBjb25zdCB0ZXh0QXJlYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XHJcbiAgdGV4dEFyZWEudHlwZSA9ICd0ZXh0YXJlYSc7XHJcbiAgdGV4dEFyZWEuY2xhc3NMaXN0LmFkZCgndGV4dC1lZGl0JywgJ2Qtbm9uZScsICd3LTEwMCcpO1xyXG4gIHRleHRBcmVhLnZhbHVlID0gdGFzay5kZXNjcmlwdGlvbjtcclxuICB0ZXh0QXJlYS5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCB0ZXh0QXJlYUNoYW5nZUhhbmRsZXIpO1xyXG4gIHRleHRBcmVhLmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0ZXh0QXJlYUVudGVyS2V5SGFuZGxlcik7XHJcblxyXG4gIGNvbnN0IGNoZWNrQm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcclxuICBjaGVja0JveC50eXBlID0gJ2NoZWNrYm94JztcclxuICBjaGVja0JveC5jaGVja2VkID0gdGFzay5jb21wbGV0ZWQ7XHJcbiAgY2hlY2tCb3guY2xhc3NMaXN0LmFkZCgnZm9ybS1jaGVjay1pbnB1dCcpO1xyXG5cclxuICBjb25zdCB2ZXJ0QnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgdmVydEJ0bi5pbm5lckhUTUwgPSB2ZXJ0QnRuU3ZnO1xyXG4gIHZlcnRCdG4uY2xhc3NMaXN0LmFkZCgnbXMtYXV0bycpO1xyXG5cclxuICBsaS5hcHBlbmRDaGlsZChjaGVja0JveCk7XHJcbiAgbGkuYXBwZW5kQ2hpbGQocCk7XHJcbiAgbGkuYXBwZW5kQ2hpbGQodGV4dEFyZWEpO1xyXG4gIGxpLmFwcGVuZENoaWxkKHZlcnRCdG4pO1xyXG5cclxuICBjb25zdCB1bCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNsaXN0LWNvbnRhaW5lciB1bCcpO1xyXG4gIC8vIGNvbnNvbGUubG9nKGxpLmlubmVySFRNTClcclxuICB1bC5hcHBlbmRDaGlsZChsaSk7XHJcbiAgLy8gY29uc29sZS5sb2codWwuaW5uZXJIVE1MKVxyXG4gIC8vIHN0eWxpbmcgZm9yIGNoZWNrZWQgdGFza3NcclxuICBjaGVja0JveC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBjaGVja0JveEhhbmRsZXIpO1xyXG4gIGlmIChjaGVja0JveC5jaGVja2VkKSB7IGxpQ2hlY2tlZFRvZ2dsZShjaGVja0JveCk7IH1cclxufSIsImltcG9ydCBwb3B1bGF0ZUxpc3QgZnJvbSAnLi9wb3B1bGF0ZUxpc3QnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYWRkVGFza0hhbmRsZXIoZWxlbWVudCkge1xyXG4gIC8vIHVwZGF0ZSBsb2NhbHN0b3JhZ2VcclxuICBjb25zdCB0YXNrcyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rhc2tzJykpIHx8IFtdO1xyXG4gIGNvbnN0IG5ld1Rhc2sgPSB7XHJcbiAgICBkZXNjcmlwdGlvbjogZWxlbWVudC52YWx1ZSxcclxuICAgIGNvbXBsZXRlZDogZmFsc2UsXHJcbiAgICBpbmRleDogdGFza3MubGVuZ3RoLFxyXG4gIH07XHJcbiAgdGFza3MucHVzaChuZXdUYXNrKTtcclxuICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndGFza3MnLCBKU09OLnN0cmluZ2lmeSh0YXNrcykpO1xyXG5cclxuICAvLyB1cGRhdGUgdWlcclxuICBwb3B1bGF0ZUxpc3QobmV3VGFzayk7XHJcbiAgZWxlbWVudC52YWx1ZSA9ICcnO1xyXG59IiwiLy8gaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcclxuaW1wb3J0ICcuL3N0eWxlLnNjc3MnO1xyXG5pbXBvcnQgcG9wdWxhdGVMaXN0IGZyb20gJy4vbW9kdWxlcy9wb3B1bGF0ZUxpc3QnO1xyXG5pbXBvcnQgcmVtb3ZlSGFuZGxlciBmcm9tICcuL21vZHVsZXMvcmVtb3ZlVGFzayc7XHJcbmltcG9ydCBhZGRUYXNrSGFuZGxlciBmcm9tICcuL21vZHVsZXMvYWRkVGFzayc7XHJcbmltcG9ydCB7IGVkaXRUYXNrTGlzdGVuZXJzRm9yU3R5bGUgfSBmcm9tICcuL21vZHVsZXMvZWRpdFRhc2snO1xyXG5cclxuLy8gUG9wdWxhdGUgVUkgb24gcGFnZSBsb2FkXHJcbmNvbnN0IHRhc2tzID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndGFza3MnKSkgfHwgW107XHJcbnRhc2tzLmZvckVhY2goKHRhc2spID0+IHBvcHVsYXRlTGlzdCh0YXNrKSk7XHJcblxyXG5lZGl0VGFza0xpc3RlbmVyc0ZvclN0eWxlKCk7XHJcblxyXG5jb25zdCByZW1vdmVTZWxlY3RlZERpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNyZW1vdmUtc2VsZWN0ZWQnKTtcclxucmVtb3ZlU2VsZWN0ZWREaXYuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCByZW1vdmVIYW5kbGVyKTtcclxuXHJcbi8vIFByZXZlbnQgYmFkIHVpIGR1cmluZyBsb2FkXHJcbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgKCkgPT4ge1xyXG4gIGNvbnN0IGxpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbGlzdC1jb250YWluZXInKTtcclxuICBsaXN0LmNsYXNzTGlzdC5yZW1vdmUoJ2Qtbm9uZScpO1xyXG59KTtcclxuXHJcbi8vIEFkZCBjcmVhdGUgYW5kIGVkaXQgbGlzdGVuZXJzXHJcbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgKCkgPT4ge1xyXG4gIC8vIGlucHV0IHRleHRhcmVhIGxpc3RlbmVyIHRvIGFkZCB0YXNrXHJcbiAgY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjcmVhdGUtdGFzay10ZXh0Jyk7XHJcbiAgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGUpID0+IHtcclxuICAgIGlmIChlLmNvZGUgPT09ICdFbnRlcicpIHtcclxuICAgICAgYWRkVGFza0hhbmRsZXIoZWxlbWVudCk7XHJcbiAgICAgIC8vIGVkaXQgaGFuZGxlciBmb3IgbmV3IHRhc2tcclxuICAgICAgZWRpdFRhc2tMaXN0ZW5lcnNGb3JTdHlsZSgpO1xyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuICAvLyBuZXcgdGFzayBidXR0b24gbGlzdGVuZXIgdG8gYWRkIHRhc2tcclxuICBjb25zdCBmb3JtQWRkQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2xpc3QtY29udGFpbmVyID4gZGl2ID4gc3BhbicpO1xyXG4gIGZvcm1BZGRCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xyXG4gICAgYWRkVGFza0hhbmRsZXIoZS50YXJnZXQucHJldmlvdXNFbGVtZW50U2libGluZyk7XHJcbiAgICAvLyBlZGl0IGhhbmRsZXIgZm9yIG5ldyB0YXNrXHJcbiAgICBlZGl0VGFza0xpc3RlbmVyc0ZvclN0eWxlKCk7XHJcbiAgfSk7XHJcbn0pO1xyXG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZW1vdmVIYW5kbGVyKCkge1xyXG4gIC8vIFJlbW92ZSBmcm9tIGxvY2FsU3RvcmFnZVxyXG4gIGxldCB0YXNrcyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rhc2tzJykpIHx8IFtdO1xyXG4gIHRhc2tzID0gdGFza3MuZmlsdGVyKCh0YXNrKSA9PiB0YXNrLmNvbXBsZXRlZCA9PT0gZmFsc2UpO1xyXG4gIC8vIHVwZGF0ZSBpbmRleFxyXG4gIHRhc2tzLmZvckVhY2goKHRhc2ssIGluZGV4KSA9PiB7IHRhc2suaW5kZXggPSBpbmRleDsgfSk7XHJcbiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3Rhc2tzJywgSlNPTi5zdHJpbmdpZnkodGFza3MpKTtcclxuXHJcbiAgLy8gUmVtb3ZlIGZyb20gdWlcclxuICBjb25zdCBjaGVja0JveGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnI2xpc3QtY29udGFpbmVyIGxpID4gaW5wdXRbdHlwZT1jaGVja2JveF0nKTtcclxuICBjaGVja0JveGVzLmZvckVhY2goKGJveCkgPT4ge1xyXG4gICAgaWYgKGJveC5jaGVja2VkKSB7IGJveC5wYXJlbnRFbGVtZW50LnJlbW92ZSgpOyB9XHJcbiAgfSk7XHJcbn0iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18iLCJVUkwiLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMV9fXyIsIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzFfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJ1cmwiLCJvcHRpb25zIiwiU3RyaW5nIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJ0ZXN0Iiwic2xpY2UiLCJoYXNoIiwibmVlZFF1b3RlcyIsInJlcGxhY2UiLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2UiLCJzb3VyY2VSb290Iiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJtIiwibiIsImdldHRlciIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJnIiwiZ2xvYmFsVGhpcyIsIkZ1bmN0aW9uIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInNjcmlwdFVybCIsImltcG9ydFNjcmlwdHMiLCJsb2NhdGlvbiIsImN1cnJlbnRTY3JpcHQiLCJzcmMiLCJzY3JpcHRzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJwIiwiYiIsImJhc2VVUkkiLCJzZWxmIiwiaHJlZiIsImVkaXRlZEVsZW1lbnRzIiwiZWRpdFRhc2tMaXN0ZW5lcnNGb3JTdHlsZSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwidGFnIiwiaGFzQXR0cmlidXRlIiwiYWRkRXZlbnRMaXN0ZW5lciIsImNsYXNzTGlzdCIsImFkZCIsIm5leHRFbGVtZW50U2libGluZyIsInNpYmxpbmciLCJwYXJlbnRFbGVtZW50IiwidGV4dEFyZWFDaGFuZ2VIYW5kbGVyIiwibmV3VGV4dCIsInZhbHVlIiwibGlzdEVsZW1lbnRzIiwiZWwiLCJ0YXNrcyIsInBhcnNlIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsImtleXMiLCJkZXNjcmlwdGlvbiIsInNldEl0ZW0iLCJwcmV2aW91c0VsZW1lbnRTaWJsaW5nIiwiaW5uZXJUZXh0IiwidGV4dEFyZWFFbnRlcktleUhhbmRsZXIiLCJjb2RlIiwiYmx1ciIsImxpQ2hlY2tlZFRvZ2dsZSIsImNoZWNrQm94IiwidG9nZ2xlIiwidXBkYXRlTG9jYWxTdG9yYWdlIiwiY29tcGxldGVTdGF0dXMiLCJjaGVja0JveGVzIiwidGFzayIsImNvbXBsZXRlZCIsImNoZWNrQm94SGFuZGxlciIsImNoZWNrZWQiLCJwb3B1bGF0ZUxpc3QiLCJsaSIsImlubmVySFRNTCIsInRleHRBcmVhIiwidHlwZSIsInZlcnRCdG4iLCJ2ZXJ0QnRuU3ZnIiwiYWRkVGFza0hhbmRsZXIiLCJuZXdUYXNrIiwiZmlsdGVyIiwiYm94Il0sInNvdXJjZVJvb3QiOiIifQ==